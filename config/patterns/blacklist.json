{
  "patterns": {
    "eval": {
      "regex": "eval\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Dynamic code execution"
    },
    "exec": {
      "regex": "exec\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Dynamic code execution"
    },
    "os_system": {
      "regex": "os\\.system\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "System command execution"
    },
    "os_popen": {
      "regex": "os\\.popen\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "System command execution"
    },
    "subprocess_call": {
      "regex": "subprocess\\.call\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Subprocess execution"
    },
    "subprocess_popen": {
      "regex": "subprocess\\.Popen\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Subprocess execution"
    },
    "subprocess_run": {
      "regex": "subprocess\\.run\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Subprocess execution"
    },
    "subprocess_check_output": {
      "regex": "subprocess\\.check_output\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Subprocess execution"
    },
    "base64_decode": {
      "regex": "base64\\s*-d\\s+[A-Za-z0-9+/=]{10,}",
      "risk_level": "medium",
      "description": "Base64 decode command"
    },
    "base64_encoded": {
      "regex": "[A-Za-z0-9+/]{20,}={0,2}",
      "risk_level": "medium",
      "description": "Base64 encoded string"
    },
    "base64_execute": {
      "regex": "base64.*decode.*exec",
      "risk_level": "high",
      "description": "Base64 decode and execute"
    },
    "curl_download": {
      "regex": "curl\\s+https?://[^\\s]+\\s+-o\\s+[^\\s\"]+",
      "risk_level": "medium",
      "description": "Curl file download"
    },
    "curl_dangerous": {
      "regex": "curl\\s+.*-d\\s+.*",
      "risk_level": "medium",
      "description": "Curl with data"
    },
    "curl_upload": {
      "regex": "curl\\s+.*-T\\s+",
      "risk_level": "medium",
      "description": "Curl file upload"
    },
    "wget_dangerous": {
      "regex": "wget\\s+.*-O\\s+.*",
      "risk_level": "medium",
      "description": "Wget file download"
    },
    "powershell_invoke": {
      "regex": "Invoke-Expression\\s+[^`]*",
      "risk_level": "high",
      "description": "PowerShell dynamic execution"
    },
    "powershell_iex": {
      "regex": "iex\\s+[^`]*",
      "risk_level": "high",
      "description": "PowerShell dynamic execution"
    },
    "powershell_command": {
      "regex": "powershell\\s+.*-Command\\s+.*",
      "risk_level": "high",
      "description": "PowerShell command execution"
    },
    "powershell_encoded": {
      "regex": "powershell.*-EncodedCommand",
      "risk_level": "high",
      "description": "PowerShell encoded command"
    },
    "bash_eval": {
      "regex": "eval\\s+[^;]*",
      "risk_level": "high",
      "description": "Bash dynamic execution"
    },
    "bash_source": {
      "regex": "source\\s+[^;]*",
      "risk_level": "medium",
      "description": "Bash source command"
    },
    "bash_exec": {
      "regex": "exec\\s+[^;]*",
      "risk_level": "high",
      "description": "Bash exec command"
    },
    "command_injection": {
      "regex": "\\$\\{.*\\}|\\$\\(.*\\)",
      "risk_level": "medium",
      "description": "Command injection pattern"
    },
    "backticks": {
      "regex": "`.*`",
      "risk_level": "medium",
      "description": "Command substitution with backticks"
    },
    "js_eval": {
      "regex": "eval\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "JavaScript dynamic execution"
    },
    "js_function": {
      "regex": "Function\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "JavaScript Function constructor"
    },
    "js_settimeout": {
      "regex": "setTimeout\\s*\\([^)]*\\)",
      "risk_level": "medium",
      "description": "JavaScript setTimeout"
    },
    "js_setinterval": {
      "regex": "setInterval\\s*\\([^)]*\\)",
      "risk_level": "medium",
      "description": "JavaScript setInterval"
    },
    "file_write": {
      "regex": "open\\s*\\([^)]*,\\s*[\"']w[\"']",
      "risk_level": "medium",
      "description": "File write operation"
    },
    "file_delete": {
      "regex": "os\\.remove\\s*\\([^)]*\\)",
      "risk_level": "medium",
      "description": "File deletion"
    },
    "file_execute": {
      "regex": "chmod\\s+.*\\+x",
      "risk_level": "medium",
      "description": "File permission change"
    },
    "socket_connect": {
      "regex": "socket\\.connect\\s*\\([^)]*\\)",
      "risk_level": "medium",
      "description": "Socket connection"
    },
    "requests_post": {
      "regex": "requests\\.post\\s*\\([^)]*\\)",
      "risk_level": "medium",
      "description": "HTTP POST request"
    },
    "requests_get": {
      "regex": "requests\\.get\\s*\\([^)]*\\)",
      "risk_level": "medium",
      "description": "HTTP GET request"
    },
    "process_start": {
      "regex": "Process\\.Start\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Process creation"
    },
    "process_spawn": {
      "regex": "spawn\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Process spawning"
    },
    "registry_write": {
      "regex": "Registry\\.SetValue\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Registry write operation"
    },
    "registry_delete": {
      "regex": "Registry\\.DeleteValue\\s*\\([^)]*\\)",
      "risk_level": "high",
      "description": "Registry deletion"
    },
    "service_start": {
      "regex": "Start-Service\\s+[^`]*",
      "risk_level": "high",
      "description": "Service start"
    },
    "service_stop": {
      "regex": "Stop-Service\\s+[^`]*",
      "risk_level": "high",
      "description": "Service stop"
    },
    "schtasks": {
      "regex": "schtasks\\s+.*/create",
      "risk_level": "high",
      "description": "Scheduled task creation"
    },
    "cron_job": {
      "regex": "crontab\\s+.*-e",
      "risk_level": "high",
      "description": "Cron job modification"
    },
    "ftp_upload": {
      "regex": "ftp\\s+.*-n",
      "risk_level": "medium",
      "description": "FTP upload"
    },
    "scp_upload": {
      "regex": "scp\\s+.*@",
      "risk_level": "medium",
      "description": "SCP file transfer"
    },
    "sudo_exec": {
      "regex": "sudo\\s+.*exec",
      "risk_level": "high",
      "description": "Sudo with exec"
    },
    "runas": {
      "regex": "runas\\s+.*/user:",
      "risk_level": "high",
      "description": "Run as different user"
    },
    "sleep_random": {
      "regex": "sleep\\s+.*random",
      "risk_level": "low",
      "description": "Random sleep (anti-analysis)"
    },
    "timeout_random": {
      "regex": "timeout\\s+.*random",
      "risk_level": "low",
      "description": "Random timeout (anti-analysis)"
    },
    "obfuscated_strings": {
      "regex": "\\\\x[0-9a-fA-F]{2}",
      "risk_level": "medium",
      "description": "Hex encoded strings"
    },
    "hex_encoded": {
      "regex": "\\\\x[0-9a-fA-F]{2,}",
      "risk_level": "medium",
      "description": "Hex encoded content"
    },
    "unicode_encoded": {
      "regex": "\\\\u[0-9a-fA-F]{4}",
      "risk_level": "medium",
      "description": "Unicode encoded content"
    },
    "rot13_encoded": {
      "regex": "[A-Za-z]{15,}",
      "risk_level": "low",
      "description": "Potential ROT13 encoding"
    },
    "url_decode_execute": {
      "regex": "urllib\\.parse\\.unquote.*exec",
      "risk_level": "high",
      "description": "URL decode and execute"
    },
    "url_decode_eval": {
      "regex": "urllib\\.parse\\.unquote.*eval",
      "risk_level": "high",
      "description": "URL decode and eval"
    },
    "log4j_exploit": {
      "regex": "\\$\\{jndi:ldap://|\\$\\{jndi:rmi://",
      "risk_level": "critical",
      "description": "Log4j JNDI injection exploit"
    },
    "reverse_shell_bash": {
      "regex": "bash\\s+-i\\s+>&\\s+/dev/tcp/|bash\\s+-c\\s+.*/dev/tcp/",
      "risk_level": "critical",
      "description": "Bash reverse shell"
    },
    "reverse_shell_python": {
      "regex": "socket\\.connect.*\\(.*,\\s*\\d+\\)|subprocess\\.call.*bash.*-i",
      "risk_level": "critical",
      "description": "Python reverse shell"
    },
    "reverse_shell_powershell": {
      "regex": "powershell.*-c.*IEX.*\\$client|powershell.*-enc.*",
      "risk_level": "critical",
      "description": "PowerShell reverse shell"
    },
    "privilege_escalation_sudo": {
      "regex": "sudo\\s+.*/bin/bash|sudo\\s+.*/bin/sh",
      "risk_level": "critical",
      "description": "Sudo privilege escalation"
    },
    "privilege_escalation_suid": {
      "regex": "find\\s+.*-perm\\s+-4000|find\\s+.*-perm\\s+-u=s",
      "risk_level": "critical",
      "description": "SUID privilege escalation"
    },
    "rce_web_shell": {
      "regex": "\\$_GET\\[.*\\]|\\$_POST\\[.*\\]|\\$_REQUEST\\[.*\\]",
      "risk_level": "critical",
      "description": "Web shell RCE pattern"
    },
    "rce_php_shell": {
      "regex": "system\\s*\\(\\$_|exec\\s*\\(\\$_|shell_exec\\s*\\(\\$_",
      "risk_level": "critical",
      "description": "PHP shell RCE"
    },
    "rce_asp_shell": {
      "regex": "CreateObject\\s*\\(\\\"WScript\\.Shell\\\"\\).*Exec",
      "risk_level": "critical",
      "description": "ASP shell RCE"
    },
    "sql_injection_basic": {
      "regex": "'.*OR.*1=1|'.*UNION.*SELECT|'.*DROP.*TABLE",
      "risk_level": "critical",
      "description": "Basic SQL injection"
    },
    "sql_injection_advanced": {
      "regex": "'.*AND.*1=1|'.*OR.*1=1--|'.*UNION.*ALL.*SELECT",
      "risk_level": "critical",
      "description": "Advanced SQL injection"
    },
    "xss_reflected": {
      "regex": "<script.*>.*</script>|<img.*onerror=|<svg.*onload=",
      "risk_level": "critical",
      "description": "Reflected XSS"
    },
    "xss_stored": {
      "regex": "document\\.write.*\\+|innerHTML.*\\+|outerHTML.*\\+",
      "risk_level": "critical",
      "description": "Stored XSS"
    },
    "xss_dom": {
      "regex": "location\\.hash|document\\.URL|document\\.documentURI",
      "risk_level": "critical",
      "description": "DOM-based XSS"
    },
    "command_injection_basic": {
      "regex": ";.*\\$\\{.*\\}|;.*\\$\\(.*\\)|;.*`.*`",
      "risk_level": "critical",
      "description": "Basic command injection"
    },
    "command_injection_advanced": {
      "regex": "\\|.*\\$\\{.*\\}|\\|.*\\$\\(.*\\)|\\|.*`.*`",
      "risk_level": "critical",
      "description": "Advanced command injection"
    },
    "ldap_injection": {
      "regex": "\\$\\(.*\\)|\\$\\{.*\\}.*ldap",
      "risk_level": "critical",
      "description": "LDAP injection"
    },
    "xml_external_entity": {
      "regex": "<!ENTITY.*SYSTEM|<!DOCTYPE.*\\[|<!ENTITY.*PUBLIC",
      "risk_level": "critical",
      "description": "XML External Entity injection"
    },
    "deserialization_php": {
      "regex": "unserialize\\s*\\([^)]*\\)",
      "risk_level": "critical",
      "description": "PHP deserialization"
    },
    "deserialization_java": {
      "regex": "ObjectInputStream|readObject\\s*\\([^)]*\\)",
      "risk_level": "critical",
      "description": "Java deserialization"
    },
    "deserialization_python": {
      "regex": "pickle\\.loads|yaml\\.load\\s*\\([^)]*\\)",
      "risk_level": "critical",
      "description": "Python deserialization"
    },
    "template_injection": {
      "regex": "\\$\\{.*\\}|\\{\\{.*\\}|\\[\\[.*\\]\\]",
      "risk_level": "critical",
      "description": "Template injection"
    },
    "ssrf_basic": {
      "regex": "curl.*http://|wget.*http://|file_get_contents.*http://",
      "risk_level": "critical",
      "description": "Basic SSRF"
    },
    "ssrf_advanced": {
      "regex": "requests\\.get.*http://|urllib\\.urlopen.*http://",
      "risk_level": "critical",
      "description": "Advanced SSRF"
    },
    "path_traversal": {
      "regex": "\\.\\./.*\\.\\./|%2e%2e%2f|%252e%252e%252f",
      "risk_level": "critical",
      "description": "Path traversal"
    },
    "file_include": {
      "regex": "include.*\\.\\./|require.*\\.\\./|include_once.*\\.\\./",
      "risk_level": "critical",
      "description": "File inclusion"
    },
    "code_injection_php": {
      "regex": "eval\\s*\\(\\$_|assert\\s*\\(\\$_|preg_replace.*/e",
      "risk_level": "critical",
      "description": "PHP code injection"
    },
    "code_injection_python": {
      "regex": "exec\\s*\\(\\$_|eval\\s*\\(\\$_|compile\\s*\\(\\$_",
      "risk_level": "critical",
      "description": "Python code injection"
    },
    "code_injection_javascript": {
      "regex": "eval\\s*\\(\\$_|Function\\s*\\(\\$_|setTimeout\\s*\\(\\$_",
      "risk_level": "critical",
      "description": "JavaScript code injection"
    },
    "memory_dump": {
      "regex": "procdump|minidump|memory\\.dmp|crash\\.dmp",
      "risk_level": "critical",
      "description": "Memory dump creation"
    },
    "credential_dump": {
      "regex": "mimikatz|wce|pwdump|hashdump",
      "risk_level": "critical",
      "description": "Credential dumping"
    },
    "pass_the_hash": {
      "regex": "pth-winexe|wmiexec.*-hashes|smbexec.*-hashes",
      "risk_level": "critical",
      "description": "Pass the hash attack"
    },
    "golden_ticket": {
      "regex": "ticketer|golden|kerberos.*ticket",
      "risk_level": "critical",
      "description": "Golden ticket attack"
    },
    "silver_ticket": {
      "regex": "silver.*ticket|kerberos.*service",
      "risk_level": "critical",
      "description": "Silver ticket attack"
    },
    "dc_sync": {
      "regex": "dsusers|dcsync|Get-ADUser.*-Properties",
      "risk_level": "critical",
      "description": "DC sync attack"
    },
    "lateral_movement": {
      "regex": "psexec|wmic.*/node:|schtasks.*/s",
      "risk_level": "critical",
      "description": "Lateral movement"
    },
    "persistence_registry": {
      "regex": "reg.*add.*HKCU.*Run|reg.*add.*HKLM.*Run",
      "risk_level": "critical",
      "description": "Registry persistence"
    },
    "persistence_startup": {
      "regex": "copy.*Startup|copy.*Start.*Menu",
      "risk_level": "critical",
      "description": "Startup folder persistence"
    },
    "persistence_service": {
      "regex": "sc.*create.*auto|New-Service.*-StartupType",
      "risk_level": "critical",
      "description": "Service persistence"
    },
    "persistence_scheduled_task": {
      "regex": "schtasks.*/create.*/tn|Register-ScheduledJob",
      "risk_level": "critical",
      "description": "Scheduled task persistence"
    },
    "data_exfiltration_ftp": {
      "regex": "ftp.*-n.*put|ftp.*-n.*mput",
      "risk_level": "critical",
      "description": "FTP data exfiltration"
    },
    "data_exfiltration_scp": {
      "regex": "scp.*@.*:|scp.*-r.*@",
      "risk_level": "critical",
      "description": "SCP data exfiltration"
    },
    "data_exfiltration_curl": {
      "regex": "curl.*-T.*http://|curl.*--upload-file.*http://",
      "risk_level": "critical",
      "description": "Curl data exfiltration"
    },
    "data_exfiltration_wget": {
      "regex": "wget.*--post-file.*http://|wget.*--post-data.*http://",
      "risk_level": "critical",
      "description": "Wget data exfiltration"
    },
    "data_exfiltration_dns": {
      "regex": "nslookup.*\\$|dig.*\\$|host.*\\$",
      "risk_level": "critical",
      "description": "DNS data exfiltration"
    },
    "data_exfiltration_http": {
      "regex": "curl.*-d.*http://|wget.*--post-data.*http://",
      "risk_level": "critical",
      "description": "HTTP data exfiltration"
    },
    "data_exfiltration_icmp": {
      "regex": "ping.*-p.*|ping.*-s.*",
      "risk_level": "critical",
      "description": "ICMP data exfiltration"
    },
    "data_exfiltration_smtp": {
      "regex": "mail.*-s.*|sendmail.*-t",
      "risk_level": "critical",
      "description": "SMTP data exfiltration"
    },
    "data_exfiltration_irc": {
      "regex": "irc.*PRIVMSG|irc.*NOTICE",
      "risk_level": "critical",
      "description": "IRC data exfiltration"
    },
    "data_exfiltration_tor": {
      "regex": "tor.*--service|tor.*--hidden-service",
      "risk_level": "critical",
      "description": "Tor data exfiltration"
    },
    "data_exfiltration_vpn": {
      "regex": "openvpn.*--config|vpn.*--config",
      "risk_level": "critical",
      "description": "VPN data exfiltration"
    },
    "data_exfiltration_ssh": {
      "regex": "ssh.*-R.*|ssh.*-L.*",
      "risk_level": "critical",
      "description": "SSH tunnel data exfiltration"
    },
    "data_exfiltration_webhook": {
      "regex": "curl.*-X.*POST.*webhook|wget.*--post-data.*webhook",
      "risk_level": "critical",
      "description": "Webhook data exfiltration"
    },
    "data_exfiltration_cloud": {
      "regex": "aws.*s3.*cp|gcloud.*storage.*cp|az.*storage.*copy",
      "risk_level": "critical",
      "description": "Cloud storage data exfiltration"
    },
    "data_exfiltration_email": {
      "regex": "mail.*-s.*|sendmail.*-t|mutt.*-s",
      "risk_level": "critical",
      "description": "Email data exfiltration"
    },
    "data_exfiltration_chat": {
      "regex": "slack.*-m|discord.*-m|telegram.*-m",
      "risk_level": "critical",
      "description": "Chat platform data exfiltration"
    },
    "data_exfiltration_api": {
      "regex": "curl.*-X.*POST.*api|wget.*--post-data.*api",
      "risk_level": "critical",
      "description": "API data exfiltration"
    },
    "data_exfiltration_database": {
      "regex": "mysqldump.*>|pg_dump.*>|sqlite3.*dump.*>",
      "risk_level": "critical",
      "description": "Database data exfiltration"
    },
    "data_exfiltration_file": {
      "regex": "tar.*-czf.*|zip.*-r.*|7z.*a.*",
      "risk_level": "critical",
      "description": "File compression data exfiltration"
    },
    "data_exfiltration_archive": {
      "regex": "tar.*-cf.*|zip.*-r.*|7z.*a.*",
      "risk_level": "critical",
      "description": "Archive data exfiltration"
    },
    "data_exfiltration_encrypted": {
      "regex": "gpg.*-e.*|openssl.*enc.*-e|aes.*-e",
      "risk_level": "critical",
      "description": "Encrypted data exfiltration"
    },
    "data_exfiltration_split": {
      "regex": "split.*-b.*|dd.*if.*of.*bs.*",
      "risk_level": "critical",
      "description": "Split file data exfiltration"
    },
    "data_exfiltration_steganography": {
      "regex": "steghide.*embed|stegsnow.*-C|outguess.*-e",
      "risk_level": "critical",
      "description": "Steganography data exfiltration"
    },
    "data_exfiltration_covert": {
      "regex": "covert.*channel|hidden.*channel|secret.*channel",
      "risk_level": "critical",
      "description": "Covert channel data exfiltration"
    },
    "data_exfiltration_timing": {
      "regex": "sleep.*\\$|timeout.*\\$|delay.*\\$",
      "risk_level": "critical",
      "description": "Timing-based data exfiltration"
    },
    "data_exfiltration_audio": {
      "regex": "audio.*encode|sound.*encode|wave.*encode",
      "risk_level": "critical",
      "description": "Audio data exfiltration"
    },
    "data_exfiltration_image": {
      "regex": "image.*encode|picture.*encode|photo.*encode",
      "risk_level": "critical",
      "description": "Image data exfiltration"
    },
    "data_exfiltration_video": {
      "regex": "video.*encode|movie.*encode|film.*encode",
      "risk_level": "critical",
      "description": "Video data exfiltration"
    },
    "data_exfiltration_text": {
      "regex": "text.*encode|string.*encode|char.*encode",
      "risk_level": "critical",
      "description": "Text data exfiltration"
    },
    "data_exfiltration_binary": {
      "regex": "binary.*encode|hex.*encode|octal.*encode",
      "risk_level": "critical",
      "description": "Binary data exfiltration"
    },
    "data_exfiltration_base64": {
      "regex": "base64.*encode|base64.*-e|base64.*encode.*>",
      "risk_level": "critical",
      "description": "Base64 data exfiltration"
    },
    "data_exfiltration_hex": {
      "regex": "hex.*encode|hex.*dump|hex.*>",
      "risk_level": "critical",
      "description": "Hex data exfiltration"
    },
    "data_exfiltration_rot13": {
      "regex": "rot13.*encode|tr.*A-Z.*N-ZA-M",
      "risk_level": "critical",
      "description": "ROT13 data exfiltration"
    },
    "data_exfiltration_xor": {
      "regex": "xor.*encode|xor.*key|xor.*>",
      "risk_level": "critical",
      "description": "XOR data exfiltration"
    },
    "data_exfiltration_rc4": {
      "regex": "rc4.*encode|rc4.*key|rc4.*>",
      "risk_level": "critical",
      "description": "RC4 data exfiltration"
    },
    "data_exfiltration_aes": {
      "regex": "aes.*encode|aes.*key|aes.*>",
      "risk_level": "critical",
      "description": "AES data exfiltration"
    },
    "data_exfiltration_des": {
      "regex": "des.*encode|des.*key|des.*>",
      "risk_level": "critical",
      "description": "DES data exfiltration"
    },
    "data_exfiltration_rsa": {
      "regex": "rsa.*encode|rsa.*key|rsa.*>",
      "risk_level": "critical",
      "description": "RSA data exfiltration"
    },
    "data_exfiltration_dsa": {
      "regex": "dsa.*encode|dsa.*key|dsa.*>",
      "risk_level": "critical",
      "description": "DSA data exfiltration"
    },
    "data_exfiltration_ec": {
      "regex": "ec.*encode|ec.*key|ec.*>",
      "risk_level": "critical",
      "description": "Elliptic curve data exfiltration"
    },
    "data_exfiltration_blowfish": {
      "regex": "blowfish.*encode|blowfish.*key|blowfish.*>",
      "risk_level": "critical",
      "description": "Blowfish data exfiltration"
    },
    "data_exfiltration_cast": {
      "regex": "cast.*encode|cast.*key|cast.*>",
      "risk_level": "critical",
      "description": "CAST data exfiltration"
    },
    "data_exfiltration_idea": {
      "regex": "idea.*encode|idea.*key|idea.*>",
      "risk_level": "critical",
      "description": "IDEA data exfiltration"
    },
    "data_exfiltration_seed": {
      "regex": "seed.*encode|seed.*key|seed.*>",
      "risk_level": "critical",
      "description": "SEED data exfiltration"
    },
    "data_exfiltration_camellia": {
      "regex": "camellia.*encode|camellia.*key|camellia.*>",
      "risk_level": "critical",
      "description": "Camellia data exfiltration"
    },
    "data_exfiltration_aria": {
      "regex": "aria.*encode|aria.*key|aria.*>",
      "risk_level": "critical",
      "description": "ARIA data exfiltration"
    },
    "data_exfiltration_sm4": {
      "regex": "sm4.*encode|sm4.*key|sm4.*>",
      "risk_level": "critical",
      "description": "SM4 data exfiltration"
    },
    "data_exfiltration_sm2": {
      "regex": "sm2.*encode|sm2.*key|sm2.*>",
      "risk_level": "critical",
      "description": "SM2 data exfiltration"
    },
    "data_exfiltration_sm3": {
      "regex": "sm3.*encode|sm3.*key|sm3.*>",
      "risk_level": "critical",
      "description": "SM3 data exfiltration"
    },
    "data_exfiltration_sha": {
      "regex": "sha.*encode|sha.*key|sha.*>",
      "risk_level": "critical",
      "description": "SHA data exfiltration"
    },
    "data_exfiltration_md5": {
      "regex": "md5.*encode|md5.*key|md5.*>",
      "risk_level": "critical",
      "description": "MD5 data exfiltration"
    },
    "data_exfiltration_whirlpool": {
      "regex": "whirlpool.*encode|whirlpool.*key|whirlpool.*>",
      "risk_level": "critical",
      "description": "Whirlpool data exfiltration"
    },
    "data_exfiltration_ripemd": {
      "regex": "ripemd.*encode|ripemd.*key|ripemd.*>",
      "risk_level": "critical",
      "description": "RIPEMD data exfiltration"
    },
    "data_exfiltration_sha3": {
      "regex": "sha3.*encode|sha3.*key|sha3.*>",
      "risk_level": "critical",
      "description": "SHA3 data exfiltration"
    },
    "data_exfiltration_keccak": {
      "regex": "keccak.*encode|keccak.*key|keccak.*>",
      "risk_level": "critical",
      "description": "Keccak data exfiltration"
    },
    "data_exfiltration_blake": {
      "regex": "blake.*encode|blake.*key|blake.*>",
      "risk_level": "critical",
      "description": "BLAKE data exfiltration"
    },
    "data_exfiltration_groestl": {
      "regex": "groestl.*encode|groestl.*key|groestl.*>",
      "risk_level": "critical",
      "description": "Grøstl data exfiltration"
    },
    "data_exfiltration_jh": {
      "regex": "jh.*encode|jh.*key|jh.*>",
      "risk_level": "critical",
      "description": "JH data exfiltration"
    },
    "data_exfiltration_skein": {
      "regex": "skein.*encode|skein.*key|skein.*>",
      "risk_level": "critical",
      "description": "Skein data exfiltration"
    },
    "data_exfiltration_cubehash": {
      "regex": "cubehash.*encode|cubehash.*key|cubehash.*>",
      "risk_level": "critical",
      "description": "CubeHash data exfiltration"
    },
    "data_exfiltration_echo": {
      "regex": "echo.*encode|echo.*key|echo.*>",
      "risk_level": "critical",
      "description": "Echo data exfiltration"
    },
    "data_exfiltration_fugue": {
      "regex": "fugue.*encode|fugue.*key|fugue.*>",
      "risk_level": "critical",
      "description": "Fugue data exfiltration"
    },
    "data_exfiltration_hamsi": {
      "regex": "hamsi.*encode|hamsi.*key|hamsi.*>",
      "risk_level": "critical",
      "description": "Hamsi data exfiltration"
    },
    "data_exfiltration_luffa": {
      "regex": "luffa.*encode|luffa.*key|luffa.*>",
      "risk_level": "critical",
      "description": "Luffa data exfiltration"
    },
    "data_exfiltration_shavite": {
      "regex": "shavite.*encode|shavite.*key|shavite.*>",
      "risk_level": "critical",
      "description": "Shavite data exfiltration"
    },
    "data_exfiltration_simd": {
      "regex": "simd.*encode|simd.*key|simd.*>",
      "risk_level": "critical",
      "description": "SIMD data exfiltration"
    },
    "data_exfiltration_eskein": {
      "regex": "eskein.*encode|eskein.*key|eskein.*>",
      "risk_level": "critical",
      "description": "ESkein data exfiltration"
    },
    "data_exfiltration_lesamnta": {
      "regex": "lesamnta.*encode|lesamnta.*key|lesamnta.*>",
      "risk_level": "critical",
      "description": "Lesamnta data exfiltration"
    },
    "data_exfiltration_sha2": {
      "regex": "sha2.*encode|sha2.*key|sha2.*>",
      "risk_level": "critical",
      "description": "SHA2 data exfiltration"
    },
    "data_exfiltration_sha1": {
      "regex": "sha1.*encode|sha1.*key|sha1.*>",
      "risk_level": "critical",
      "description": "SHA1 data exfiltration"
    },
    "data_exfiltration_sha0": {
      "regex": "sha0.*encode|sha0.*key|sha0.*>",
      "risk_level": "critical",
      "description": "SHA0 data exfiltration"
    },
    "data_exfiltration_md4": {
      "regex": "md4.*encode|md4.*key|md4.*>",
      "risk_level": "critical",
      "description": "MD4 data exfiltration"
    },
    "data_exfiltration_md2": {
      "regex": "md2.*encode|md2.*key|md2.*>",
      "risk_level": "critical",
      "description": "MD2 data exfiltration"
    },
    "data_exfiltration_md6": {
      "regex": "md6.*encode|md6.*key|md6.*>",
      "risk_level": "critical",
      "description": "MD6 data exfiltration"
    },
    "data_exfiltration_tiger": {
      "regex": "tiger.*encode|tiger.*key|tiger.*>",
      "risk_level": "critical",
      "description": "Tiger data exfiltration"
    },
    "data_exfiltration_haval": {
      "regex": "haval.*encode|haval.*key|haval.*>",
      "risk_level": "critical",
      "description": "HAVAL data exfiltration"
    },
    "data_exfiltration_panama": {
      "regex": "panama.*encode|panama.*key|panama.*>",
      "risk_level": "critical",
      "description": "Panama data exfiltration"
    },
    "data_exfiltration_radio": {
      "regex": "radio.*encode|radio.*key|radio.*>",
      "risk_level": "critical",
      "description": "RadioGatún data exfiltration"
    },
    "data_exfiltration_edon": {
      "regex": "edon.*encode|edon.*key|edon.*>",
      "risk_level": "critical",
      "description": "Edon-R data exfiltration"
    },
    "data_exfiltration_cheetah": {
      "regex": "cheetah.*encode|cheetah.*key|cheetah.*>",
      "risk_level": "critical",
      "description": "Cheetah data exfiltration"
    },
    "data_exfiltration_lane": {
      "regex": "lane.*encode|lane.*key|lane.*>",
      "risk_level": "critical",
      "description": "Lane data exfiltration"
    },
    "data_exfiltration_swift": {
      "regex": "swift.*encode|swift.*key|swift.*>",
      "risk_level": "critical",
      "description": "Swift data exfiltration"
    },
    "data_exfiltration_shabal": {
      "regex": "shabal.*encode|shabal.*key|shabal.*>",
      "risk_level": "critical",
      "description": "Shabal data exfiltration"
    },
    "data_exfiltration_abacus": {
      "regex": "abacus.*encode|abacus.*key|abacus.*>",
      "risk_level": "critical",
      "description": "Abacus data exfiltration"
    },
    "data_exfiltration_armadillo": {
      "regex": "armadillo.*encode|armadillo.*key|armadillo.*>",
      "risk_level": "critical",
      "description": "Armadillo data exfiltration"
    },
    "data_exfiltration_badfish": {
      "regex": "badfish.*encode|badfish.*key|badfish.*>",
      "risk_level": "critical",
      "description": "Badfish data exfiltration"
    },
    "data_exfiltration_boomerang": {
      "regex": "boomerang.*encode|boomerang.*key|boomerang.*>",
      "risk_level": "critical",
      "description": "Boomerang data exfiltration"
    },
    "data_exfiltration_cascade": {
      "regex": "cascade.*encode|cascade.*key|cascade.*>",
      "risk_level": "critical",
      "description": "Cascade data exfiltration"
    },
    "data_exfiltration_chameleon": {
      "regex": "chameleon.*encode|chameleon.*key|chameleon.*>",
      "risk_level": "critical",
      "description": "Chameleon data exfiltration"
    },
    "data_exfiltration_cobra": {
      "regex": "cobra.*encode|cobra.*key|cobra.*>",
      "risk_level": "critical",
      "description": "Cobra data exfiltration"
    },
    "data_exfiltration_diamond": {
      "regex": "diamond.*encode|diamond.*key|diamond.*>",
      "risk_level": "critical",
      "description": "Diamond data exfiltration"
    },
    "data_exfiltration_eagle": {
      "regex": "eagle.*encode|eagle.*key|eagle.*>",
      "risk_level": "critical",
      "description": "Eagle data exfiltration"
    },
    "data_exfiltration_falcon": {
      "regex": "falcon.*encode|falcon.*key|falcon.*>",
      "risk_level": "critical",
      "description": "Falcon data exfiltration"
    },
    "data_exfiltration_gazelle": {
      "regex": "gazelle.*encode|gazelle.*key|gazelle.*>",
      "risk_level": "critical",
      "description": "Gazelle data exfiltration"
    },
    "data_exfiltration_hawk": {
      "regex": "hawk.*encode|hawk.*key|hawk.*>",
      "risk_level": "critical",
      "description": "Hawk data exfiltration"
    },
    "data_exfiltration_ibex": {
      "regex": "ibex.*encode|ibex.*key|ibex.*>",
      "risk_level": "critical",
      "description": "Ibex data exfiltration"
    },
    "data_exfiltration_jaguar": {
      "regex": "jaguar.*encode|jaguar.*key|jaguar.*>",
      "risk_level": "critical",
      "description": "Jaguar data exfiltration"
    },
    "data_exfiltration_kestrel": {
      "regex": "kestrel.*encode|kestrel.*key|kestrel.*>",
      "risk_level": "critical",
      "description": "Kestrel data exfiltration"
    },
    "data_exfiltration_lynx": {
      "regex": "lynx.*encode|lynx.*key|lynx.*>",
      "risk_level": "critical",
      "description": "Lynx data exfiltration"
    },
    "data_exfiltration_mantis": {
      "regex": "mantis.*encode|mantis.*key|mantis.*>",
      "risk_level": "critical",
      "description": "Mantis data exfiltration"
    },
    "data_exfiltration_newt": {
      "regex": "newt.*encode|newt.*key|newt.*>",
      "risk_level": "critical",
      "description": "Newt data exfiltration"
    },
    "data_exfiltration_ocelot": {
      "regex": "ocelot.*encode|ocelot.*key|ocelot.*>",
      "risk_level": "critical",
      "description": "Ocelot data exfiltration"
    },
    "data_exfiltration_panther": {
      "regex": "panther.*encode|panther.*key|panther.*>",
      "risk_level": "critical",
      "description": "Panther data exfiltration"
    },
    "data_exfiltration_quail": {
      "regex": "quail.*encode|quail.*key|quail.*>",
      "risk_level": "critical",
      "description": "Quail data exfiltration"
    },
    "data_exfiltration_rabbit": {
      "regex": "rabbit.*encode|rabbit.*key|rabbit.*>",
      "risk_level": "critical",
      "description": "Rabbit data exfiltration"
    },
    "data_exfiltration_salamander": {
      "regex": "salamander.*encode|salamander.*key|salamander.*>",
      "risk_level": "critical",
      "description": "Salamander data exfiltration"
    },
    "data_exfiltration_tiger": {
      "regex": "tiger.*encode|tiger.*key|tiger.*>",
      "risk_level": "critical",
      "description": "Tiger data exfiltration"
    },
    "data_exfiltration_unicorn": {
      "regex": "unicorn.*encode|unicorn.*key|unicorn.*>",
      "risk_level": "critical",
      "description": "Unicorn data exfiltration"
    },
    "data_exfiltration_vulture": {
      "regex": "vulture.*encode|vulture.*key|vulture.*>",
      "risk_level": "critical",
      "description": "Vulture data exfiltration"
    },
    "data_exfiltration_wolf": {
      "regex": "wolf.*encode|wolf.*key|wolf.*>",
      "risk_level": "critical",
      "description": "Wolf data exfiltration"
    },
    "data_exfiltration_xenon": {
      "regex": "xenon.*encode|xenon.*key|xenon.*>",
      "risk_level": "critical",
      "description": "Xenon data exfiltration"
    },
    "data_exfiltration_yak": {
      "regex": "yak.*encode|yak.*key|yak.*>",
      "risk_level": "critical",
      "description": "Yak data exfiltration"
    },
    "data_exfiltration_zebra": {
      "regex": "zebra.*encode|zebra.*key|zebra.*>",
      "risk_level": "critical",
      "description": "Zebra data exfiltration"
    },
    "docker_privileged": {
      "regex": "docker\\s+run\\s+.*--privileged|docker\\s+run\\s+.*--cap-add\\s+ALL",
      "risk_level": "high",
      "description": "Privileged Docker container"
    },
    "docker_host_network": {
      "regex": "docker\\s+run\\s+.*--network\\s+host|docker\\s+run\\s+.*-p\\s+host",
      "risk_level": "high",
      "description": "Docker host network access"
    },
    "docker_host_mount": {
      "regex": "docker\\s+run\\s+.*-v\\s+/:/|docker\\s+run\\s+.*--mount\\s+type=bind",
      "risk_level": "high",
      "description": "Docker host filesystem mount"
    },
    "docker_secrets": {
      "regex": "docker\\s+secret\\s+create|docker\\s+run.*--secret",
      "risk_level": "high",
      "description": "Docker secrets access"
    },
    "docker_registry_auth": {
      "regex": "docker\\s+login\\s+.*|docker\\s+run.*-e\\s+REGISTRY",
      "risk_level": "medium",
      "description": "Docker registry authentication"
    },
    "kubernetes_exec": {
      "regex": "kubectl\\s+exec\\s+.*--|kubectl\\s+exec\\s+.*-it",
      "risk_level": "high",
      "description": "Kubernetes exec command"
    },
    "kubernetes_port_forward": {
      "regex": "kubectl\\s+port-forward\\s+.*|kubectl\\s+proxy",
      "risk_level": "high",
      "description": "Kubernetes port forwarding"
    },
    "kubernetes_secrets": {
      "regex": "kubectl\\s+create\\s+secret|kubectl\\s+apply\\s+-f.*secret",
      "risk_level": "high",
      "description": "Kubernetes secrets creation"
    },
    "kubernetes_configmaps": {
      "regex": "kubectl\\s+create\\s+configmap|kubectl\\s+apply\\s+-f.*configmap",
      "risk_level": "medium",
      "description": "Kubernetes configmap creation"
    },
    "kubernetes_pods": {
      "regex": "kubectl\\s+run\\s+.*|kubectl\\s+create\\s+deployment",
      "risk_level": "medium",
      "description": "Kubernetes pod creation"
    },
    "kubernetes_services": {
      "regex": "kubectl\\s+expose\\s+.*|kubectl\\s+create\\s+service",
      "risk_level": "medium",
      "description": "Kubernetes service creation"
    },
    "aws_cli_profile": {
      "regex": "aws\\s+.*--profile\\s+.*|aws\\s+configure\\s+set\\s+profile",
      "risk_level": "high",
      "description": "AWS CLI with profile"
    },
    "aws_cli_credentials": {
      "regex": "aws\\s+configure\\s+set\\s+aws_access_key|aws\\s+configure\\s+set\\s+aws_secret_key",
      "risk_level": "high",
      "description": "AWS CLI credentials"
    },
    "aws_s3_access": {
      "regex": "aws\\s+s3\\s+.*|aws\\s+s3api\\s+.*",
      "risk_level": "medium",
      "description": "AWS S3 access"
    },
    "aws_ec2_access": {
      "regex": "aws\\s+ec2\\s+.*|aws\\s+ec2api\\s+.*",
      "risk_level": "medium",
      "description": "AWS EC2 access"
    },
    "aws_iam_access": {
      "regex": "aws\\s+iam\\s+.*|aws\\s+sts\\s+.*",
      "risk_level": "high",
      "description": "AWS IAM access"
    },
    "aws_secrets_access": {
      "regex": "aws\\s+secretsmanager\\s+.*|aws\\s+ssm\\s+get-parameter",
      "risk_level": "high",
      "description": "AWS Secrets Manager access"
    },
    "aws_lambda_access": {
      "regex": "aws\\s+lambda\\s+.*|aws\\s+lambdaapi\\s+.*",
      "risk_level": "medium",
      "description": "AWS Lambda access"
    },
    "aws_cloudformation": {
      "regex": "aws\\s+cloudformation\\s+.*|aws\\s+cf\\s+.*",
      "risk_level": "medium",
      "description": "AWS CloudFormation access"
    },
    "azure_cli_subscription": {
      "regex": "az\\s+.*--subscription\\s+.*|az\\s+account\\s+set",
      "risk_level": "high",
      "description": "Azure CLI with subscription"
    },
    "azure_cli_credentials": {
      "regex": "az\\s+login\\s+.*|az\\s+account\\s+get-access-token",
      "risk_level": "high",
      "description": "Azure CLI credentials"
    },
    "azure_storage_access": {
      "regex": "az\\s+storage\\s+.*|az\\s+storageapi\\s+.*",
      "risk_level": "medium",
      "description": "Azure Storage access"
    },
    "azure_vm_access": {
      "regex": "az\\s+vm\\s+.*|az\\s+compute\\s+.*",
      "risk_level": "medium",
      "description": "Azure VM access"
    },
    "azure_keyvault_access": {
      "regex": "az\\s+keyvault\\s+.*|az\\s+keyvaultapi\\s+.*",
      "risk_level": "high",
      "description": "Azure Key Vault access"
    },
    "azure_appservice_access": {
      "regex": "az\\s+webapp\\s+.*|az\\s+appservice\\s+.*",
      "risk_level": "medium",
      "description": "Azure App Service access"
    },
    "azure_aks_access": {
      "regex": "az\\s+aks\\s+.*|az\\s+kubernetes\\s+.*",
      "risk_level": "medium",
      "description": "Azure AKS access"
    },
    "gcp_cli_project": {
      "regex": "gcloud\\s+.*--project\\s+.*|gcloud\\s+config\\s+set\\s+project",
      "risk_level": "high",
      "description": "GCP CLI with project"
    },
    "gcp_cli_credentials": {
      "regex": "gcloud\\s+auth\\s+.*|gcloud\\s+config\\s+set\\s+account",
      "risk_level": "high",
      "description": "GCP CLI credentials"
    },
    "gcp_storage_access": {
      "regex": "gcloud\\s+storage\\s+.*|gsutil\\s+.*",
      "risk_level": "medium",
      "description": "GCP Storage access"
    },
    "gcp_compute_access": {
      "regex": "gcloud\\s+compute\\s+.*|gcloud\\s+instances\\s+.*",
      "risk_level": "medium",
      "description": "GCP Compute access"
    },
    "gcp_secrets_access": {
      "regex": "gcloud\\s+secrets\\s+.*|gcloud\\s+secretmanager\\s+.*",
      "risk_level": "high",
      "description": "GCP Secrets access"
    },
    "gcp_kubernetes_access": {
      "regex": "gcloud\\s+container\\s+.*|gcloud\\s+kubernetes\\s+.*",
      "risk_level": "medium",
      "description": "GCP Kubernetes access"
    },
    "gcp_cloudfunctions": {
      "regex": "gcloud\\s+functions\\s+.*|gcloud\\s+cloudfunctions\\s+.*",
      "risk_level": "medium",
      "description": "GCP Cloud Functions access"
    },
    "terraform_aws": {
      "regex": "terraform\\s+.*aws_|terraform\\s+.*provider\\s+aws",
      "risk_level": "medium",
      "description": "Terraform AWS provider"
    },
    "terraform_azure": {
      "regex": "terraform\\s+.*azurerm_|terraform\\s+.*provider\\s+azurerm",
      "risk_level": "medium",
      "description": "Terraform Azure provider"
    },
    "terraform_gcp": {
      "regex": "terraform\\s+.*google_|terraform\\s+.*provider\\s+google",
      "risk_level": "medium",
      "description": "Terraform GCP provider"
    },
    "ansible_aws": {
      "regex": "ansible\\s+.*aws_|ansible-playbook.*aws",
      "risk_level": "medium",
      "description": "Ansible AWS modules"
    },
    "ansible_azure": {
      "regex": "ansible\\s+.*azure_|ansible-playbook.*azure",
      "risk_level": "medium",
      "description": "Ansible Azure modules"
    },
    "ansible_gcp": {
      "regex": "ansible\\s+.*gcp_|ansible-playbook.*gcp",
      "risk_level": "medium",
      "description": "Ansible GCP modules"
    },
    "helm_secrets": {
      "regex": "helm\\s+.*--set\\s+secret|helm\\s+.*--values.*secret",
      "risk_level": "high",
      "description": "Helm secrets configuration"
    },
    "helm_registry": {
      "regex": "helm\\s+.*--registry|helm\\s+.*--repo",
      "risk_level": "medium",
      "description": "Helm registry access"
    },
    "docker_compose_secrets": {
      "regex": "docker-compose\\s+.*secret|docker-compose.*-f.*secret",
      "risk_level": "high",
      "description": "Docker Compose secrets"
    },
    "docker_compose_env": {
      "regex": "docker-compose\\s+.*--env-file|docker-compose.*environment:",
      "risk_level": "medium",
      "description": "Docker Compose environment"
    },
    "rancher_access": {
      "regex": "rancher\\s+.*|kubectl\\s+.*--context.*rancher",
      "risk_level": "medium",
      "description": "Rancher access"
    },
    "openshift_access": {
      "regex": "oc\\s+.*|kubectl\\s+.*--context.*openshift",
      "risk_level": "medium",
      "description": "OpenShift access"
    },
    "istio_access": {
      "regex": "istioctl\\s+.*|kubectl\\s+.*istio",
      "risk_level": "medium",
      "description": "Istio access"
    },
    "linkerd_access": {
      "regex": "linkerd\\s+.*|kubectl\\s+.*linkerd",
      "risk_level": "medium",
      "description": "Linkerd access"
    },
    "consul_access": {
      "regex": "consul\\s+.*|kubectl\\s+.*consul",
      "risk_level": "medium",
      "description": "Consul access"
    },
    "vault_access": {
      "regex": "vault\\s+.*|kubectl\\s+.*vault",
      "risk_level": "high",
      "description": "Vault access"
    },
    "jenkins_credentials": {
      "regex": "jenkins\\s+.*credential|jenkins.*--username|jenkins.*--password",
      "risk_level": "high",
      "description": "Jenkins credentials"
    },
    "gitlab_runner": {
      "regex": "gitlab-runner\\s+.*|gitlab.*runner.*register",
      "risk_level": "medium",
      "description": "GitLab Runner access"
    },
    "github_actions_secrets": {
      "regex": "\\$\\{\\s*secrets\\.|GITHUB_TOKEN|GITHUB_SECRET",
      "risk_level": "high",
      "description": "GitHub Actions secrets"
    },
    "azure_devops_tokens": {
      "regex": "az\\s+devops\\s+.*--token|AZURE_DEVOPS_EXT_PAT",
      "risk_level": "high",
      "description": "Azure DevOps tokens"
    },
    "bitbucket_pipelines": {
      "regex": "bitbucket\\s+.*|BITBUCKET_ACCESS_TOKEN",
      "risk_level": "medium",
      "description": "Bitbucket Pipelines access"
    },
    "circleci_tokens": {
      "regex": "circleci\\s+.*|CIRCLECI_TOKEN",
      "risk_level": "medium",
      "description": "CircleCI tokens"
    },
    "travis_ci_tokens": {
      "regex": "travis\\s+.*|TRAVIS_TOKEN",
      "risk_level": "medium",
      "description": "Travis CI tokens"
    },
    "teamcity_tokens": {
      "regex": "teamcity\\s+.*|TEAMCITY_TOKEN",
      "risk_level": "medium",
      "description": "TeamCity tokens"
    },
    "bamboo_tokens": {
      "regex": "bamboo\\s+.*|BAMBOO_TOKEN",
      "risk_level": "medium",
      "description": "Bamboo tokens"
    },
    "sonarqube_tokens": {
      "regex": "sonar\\s+.*|SONAR_TOKEN",
      "risk_level": "medium",
      "description": "SonarQube tokens"
    },
    "artifactory_tokens": {
      "regex": "jfrog\\s+.*|ARTIFACTORY_TOKEN",
      "risk_level": "medium",
      "description": "Artifactory tokens"
    },
    "nexus_tokens": {
      "regex": "nexus\\s+.*|NEXUS_TOKEN",
      "risk_level": "medium",
      "description": "Nexus tokens"
    },
    "harbor_tokens": {
      "regex": "harbor\\s+.*|HARBOR_TOKEN",
      "risk_level": "medium",
      "description": "Harbor tokens"
    },
    "quay_tokens": {
      "regex": "quay\\s+.*|QUAY_TOKEN",
      "risk_level": "medium",
      "description": "Quay tokens"
    },
    "ecr_access": {
      "regex": "aws\\s+ecr\\s+.*|docker\\s+login.*ecr",
      "risk_level": "medium",
      "description": "AWS ECR access"
    },
    "acr_access": {
      "regex": "az\\s+acr\\s+.*|docker\\s+login.*acr",
      "risk_level": "medium",
      "description": "Azure ACR access"
    },
    "gcr_access": {
      "regex": "gcloud\\s+container\\s+images\\s+.*|docker\\s+login.*gcr",
      "risk_level": "medium",
      "description": "GCP GCR access"
    },
    "spring4shell_exploit": {
      "regex": "class\\.forName.*getMethod.*invoke|SpEL.*\\$\\{.*\\}|@PreAuthorize.*\\$\\{.*\\}",
      "risk_level": "critical",
      "description": "Spring4Shell exploit"
    },
    "log4shell_variants": {
      "regex": "\\$\\{jndi:ldaps://|\\$\\{jndi:rmi://|\\$\\{jndi:dns://|\\$\\{jndi:corba://|\\$\\{jndi:iiop://",
      "risk_level": "critical",
      "description": "Log4Shell variant exploits"
    },
    "proxyshell_exploit": {
      "regex": "New-ManagementRoleAssignment.*-RoleDefinitionName|Set-MailboxFolderPermission.*-User",
      "risk_level": "critical",
      "description": "ProxyShell exploit"
    },
    "proxylogon_exploit": {
      "regex": "Set-MailboxFolderPermission.*-User|Add-MailboxFolderPermission.*-User",
      "risk_level": "critical",
      "description": "ProxyLogon exploit"
    },
    "proxynotshell_exploit": {
      "regex": "New-ManagementRoleAssignment.*-RoleDefinitionName.*-User|Set-MailboxFolderPermission.*-User.*-AccessRights",
      "risk_level": "critical",
      "description": "ProxyNotShell exploit"
    },
    "petitpotam_exploit": {
      "regex": "PetitPotam|MS-EFSR|EfsRpcOpenFileRaw",
      "risk_level": "critical",
      "description": "PetitPotam exploit"
    },
    "zerologon_exploit": {
      "regex": "NetrDrsGetNCChanges|NetrDrsGetNCChanges|MS-DRSR",
      "risk_level": "critical",
      "description": "ZeroLogon exploit"
    },
    "printnightmare_exploit": {
      "regex": "spoolsv\\.exe|MS-RPRN|RpcAddPrinterDriver",
      "risk_level": "critical",
      "description": "PrintNightmare exploit"
    },
    "eternalblue_exploit": {
      "regex": "MS17-010|SMBv1|EternalBlue|DoublePulsar",
      "risk_level": "critical",
      "description": "EternalBlue exploit"
    },
    "wannacry_exploit": {
      "regex": "WannaCry|WannaCrypt|EternalRocks",
      "risk_level": "critical",
      "description": "WannaCry exploit"
    },
    "notpetya_exploit": {
      "regex": "NotPetya|Petya|EternalRocks",
      "risk_level": "critical",
      "description": "NotPetya exploit"
    },
    "badrabbit_exploit": {
      "regex": "BadRabbit|DiskCryptor|EternalRocks",
      "risk_level": "critical",
      "description": "BadRabbit exploit"
    },
    "ryuk_exploit": {
      "regex": "Ryuk|Hermes|EternalRocks",
      "risk_level": "critical",
      "description": "Ryuk exploit"
    },
    "locky_exploit": {
      "regex": "Locky|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "Locky exploit"
    },
    "cerber_exploit": {
      "regex": "Cerber|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "Cerber exploit"
    },
    "cryptolocker_exploit": {
      "regex": "CryptoLocker|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker exploit"
    },
    "teslacrypt_exploit": {
      "regex": "TeslaCrypt|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt exploit"
    },
    "cryptowall_exploit": {
      "regex": "CryptoWall|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall exploit"
    },
    "cryptolocker_v2_exploit": {
      "regex": "CryptoLocker\\.v2|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v2 exploit"
    },
    "cryptolocker_v3_exploit": {
      "regex": "CryptoLocker\\.v3|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v3 exploit"
    },
    "cryptolocker_v4_exploit": {
      "regex": "CryptoLocker\\.v4|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v4 exploit"
    },
    "cryptolocker_v5_exploit": {
      "regex": "CryptoLocker\\.v5|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v5 exploit"
    },
    "cryptolocker_v6_exploit": {
      "regex": "CryptoLocker\\.v6|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v6 exploit"
    },
    "cryptolocker_v7_exploit": {
      "regex": "CryptoLocker\\.v7|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v7 exploit"
    },
    "cryptolocker_v8_exploit": {
      "regex": "CryptoLocker\\.v8|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v8 exploit"
    },
    "cryptolocker_v9_exploit": {
      "regex": "CryptoLocker\\.v9|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v9 exploit"
    },
    "cryptolocker_v10_exploit": {
      "regex": "CryptoLocker\\.v10|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v10 exploit"
    },
    "heartbleed_exploit": {
      "regex": "Heartbleed|CVE-2014-0160|OpenSSL",
      "risk_level": "critical",
      "description": "Heartbleed exploit"
    },
    "shellshock_exploit": {
      "regex": "Shellshock|CVE-2014-6271|bash.*-c.*\\$\\{.*\\}",
      "risk_level": "critical",
      "description": "Shellshock exploit"
    },
    "struts_exploit": {
      "regex": "Struts|CVE-2017-5638|CVE-2017-9805",
      "risk_level": "critical",
      "description": "Apache Struts exploit"
    },
    "wannacry_v2_exploit": {
      "regex": "WannaCry\\.v2|WannaCrypt\\.v2|EternalRocks\\.v2",
      "risk_level": "critical",
      "description": "WannaCry v2 exploit"
    },
    "wannacry_v3_exploit": {
      "regex": "WannaCry\\.v3|WannaCrypt\\.v3|EternalRocks\\.v3",
      "risk_level": "critical",
      "description": "WannaCry v3 exploit"
    },
    "wannacry_v4_exploit": {
      "regex": "WannaCry\\.v4|WannaCrypt\\.v4|EternalRocks\\.v4",
      "risk_level": "critical",
      "description": "WannaCry v4 exploit"
    },
    "wannacry_v5_exploit": {
      "regex": "WannaCry\\.v5|WannaCrypt\\.v5|EternalRocks\\.v5",
      "risk_level": "critical",
      "description": "WannaCry v5 exploit"
    },
    "wannacry_v6_exploit": {
      "regex": "WannaCry\\.v6|WannaCrypt\\.v6|EternalRocks\\.v6",
      "risk_level": "critical",
      "description": "WannaCry v6 exploit"
    },
    "wannacry_v7_exploit": {
      "regex": "WannaCry\\.v7|WannaCrypt\\.v7|EternalRocks\\.v7",
      "risk_level": "critical",
      "description": "WannaCry v7 exploit"
    },
    "wannacry_v8_exploit": {
      "regex": "WannaCry\\.v8|WannaCrypt\\.v8|EternalRocks\\.v8",
      "risk_level": "critical",
      "description": "WannaCry v8 exploit"
    },
    "wannacry_v9_exploit": {
      "regex": "WannaCry\\.v9|WannaCrypt\\.v9|EternalRocks\\.v9",
      "risk_level": "critical",
      "description": "WannaCry v9 exploit"
    },
    "wannacry_v10_exploit": {
      "regex": "WannaCry\\.v10|WannaCrypt\\.v10|EternalRocks\\.v10",
      "risk_level": "critical",
      "description": "WannaCry v10 exploit"
    },
    "notpetya_v2_exploit": {
      "regex": "NotPetya\\.v2|Petya\\.v2|EternalRocks\\.v2",
      "risk_level": "critical",
      "description": "NotPetya v2 exploit"
    },
    "notpetya_v3_exploit": {
      "regex": "NotPetya\\.v3|Petya\\.v3|EternalRocks\\.v3",
      "risk_level": "critical",
      "description": "NotPetya v3 exploit"
    },
    "notpetya_v4_exploit": {
      "regex": "NotPetya\\.v4|Petya\\.v4|EternalRocks\\.v4",
      "risk_level": "critical",
      "description": "NotPetya v4 exploit"
    },
    "notpetya_v5_exploit": {
      "regex": "NotPetya\\.v5|Petya\\.v5|EternalRocks\\.v5",
      "risk_level": "critical",
      "description": "NotPetya v5 exploit"
    },
    "notpetya_v6_exploit": {
      "regex": "NotPetya\\.v6|Petya\\.v6|EternalRocks\\.v6",
      "risk_level": "critical",
      "description": "NotPetya v6 exploit"
    },
    "notpetya_v7_exploit": {
      "regex": "NotPetya\\.v7|Petya\\.v7|EternalRocks\\.v7",
      "risk_level": "critical",
      "description": "NotPetya v7 exploit"
    },
    "notpetya_v8_exploit": {
      "regex": "NotPetya\\.v8|Petya\\.v8|EternalRocks\\.v8",
      "risk_level": "critical",
      "description": "NotPetya v8 exploit"
    },
    "notpetya_v9_exploit": {
      "regex": "NotPetya\\.v9|Petya\\.v9|EternalRocks\\.v9",
      "risk_level": "critical",
      "description": "NotPetya v9 exploit"
    },
    "notpetya_v10_exploit": {
      "regex": "NotPetya\\.v10|Petya\\.v10|EternalRocks\\.v10",
      "risk_level": "critical",
      "description": "NotPetya v10 exploit"
    },
    "badrabbit_v2_exploit": {
      "regex": "BadRabbit\\.v2|DiskCryptor\\.v2|EternalRocks\\.v2",
      "risk_level": "critical",
      "description": "BadRabbit v2 exploit"
    },
    "badrabbit_v3_exploit": {
      "regex": "BadRabbit\\.v3|DiskCryptor\\.v3|EternalRocks\\.v3",
      "risk_level": "critical",
      "description": "BadRabbit v3 exploit"
    },
    "badrabbit_v4_exploit": {
      "regex": "BadRabbit\\.v4|DiskCryptor\\.v4|EternalRocks\\.v4",
      "risk_level": "critical",
      "description": "BadRabbit v4 exploit"
    },
    "badrabbit_v5_exploit": {
      "regex": "BadRabbit\\.v5|DiskCryptor\\.v5|EternalRocks\\.v5",
      "risk_level": "critical",
      "description": "BadRabbit v5 exploit"
    },
    "badrabbit_v6_exploit": {
      "regex": "BadRabbit\\.v6|DiskCryptor\\.v6|EternalRocks\\.v6",
      "risk_level": "critical",
      "description": "BadRabbit v6 exploit"
    },
    "badrabbit_v7_exploit": {
      "regex": "BadRabbit\\.v7|DiskCryptor\\.v7|EternalRocks\\.v7",
      "risk_level": "critical",
      "description": "BadRabbit v7 exploit"
    },
    "badrabbit_v8_exploit": {
      "regex": "BadRabbit\\.v8|DiskCryptor\\.v8|EternalRocks\\.v8",
      "risk_level": "critical",
      "description": "BadRabbit v8 exploit"
    },
    "badrabbit_v9_exploit": {
      "regex": "BadRabbit\\.v9|DiskCryptor\\.v9|EternalRocks\\.v9",
      "risk_level": "critical",
      "description": "BadRabbit v9 exploit"
    },
    "badrabbit_v10_exploit": {
      "regex": "BadRabbit\\.v10|DiskCryptor\\.v10|EternalRocks\\.v10",
      "risk_level": "critical",
      "description": "BadRabbit v10 exploit"
    },
    "ryuk_v2_exploit": {
      "regex": "Ryuk\\.v2|Hermes\\.v2|EternalRocks\\.v2",
      "risk_level": "critical",
      "description": "Ryuk v2 exploit"
    },
    "ryuk_v3_exploit": {
      "regex": "Ryuk\\.v3|Hermes\\.v3|EternalRocks\\.v3",
      "risk_level": "critical",
      "description": "Ryuk v3 exploit"
    },
    "ryuk_v4_exploit": {
      "regex": "Ryuk\\.v4|Hermes\\.v4|EternalRocks\\.v4",
      "risk_level": "critical",
      "description": "Ryuk v4 exploit"
    },
    "ryuk_v5_exploit": {
      "regex": "Ryuk\\.v5|Hermes\\.v5|EternalRocks\\.v5",
      "risk_level": "critical",
      "description": "Ryuk v5 exploit"
    },
    "ryuk_v6_exploit": {
      "regex": "Ryuk\\.v6|Hermes\\.v6|EternalRocks\\.v6",
      "risk_level": "critical",
      "description": "Ryuk v6 exploit"
    },
    "ryuk_v7_exploit": {
      "regex": "Ryuk\\.v7|Hermes\\.v7|EternalRocks\\.v7",
      "risk_level": "critical",
      "description": "Ryuk v7 exploit"
    },
    "ryuk_v8_exploit": {
      "regex": "Ryuk\\.v8|Hermes\\.v8|EternalRocks\\.v8",
      "risk_level": "critical",
      "description": "Ryuk v8 exploit"
    },
    "ryuk_v9_exploit": {
      "regex": "Ryuk\\.v9|Hermes\\.v9|EternalRocks\\.v9",
      "risk_level": "critical",
      "description": "Ryuk v9 exploit"
    },
    "ryuk_v10_exploit": {
      "regex": "Ryuk\\.v10|Hermes\\.v10|EternalRocks\\.v10",
      "risk_level": "critical",
      "description": "Ryuk v10 exploit"
    },
    "locky_v2_exploit": {
      "regex": "Locky\\.v2|Zeus\\.v2|EternalRocks\\.v2",
      "risk_level": "critical",
      "description": "Locky v2 exploit"
    },
    "locky_v3_exploit": {
      "regex": "Locky\\.v3|Zeus\\.v3|EternalRocks\\.v3",
      "risk_level": "critical",
      "description": "Locky v3 exploit"
    },
    "locky_v4_exploit": {
      "regex": "Locky\\.v4|Zeus\\.v4|EternalRocks\\.v4",
      "risk_level": "critical",
      "description": "Locky v4 exploit"
    },
    "locky_v5_exploit": {
      "regex": "Locky\\.v5|Zeus\\.v5|EternalRocks\\.v5",
      "risk_level": "critical",
      "description": "Locky v5 exploit"
    },
    "locky_v6_exploit": {
      "regex": "Locky\\.v6|Zeus\\.v6|EternalRocks\\.v6",
      "risk_level": "critical",
      "description": "Locky v6 exploit"
    },
    "locky_v7_exploit": {
      "regex": "Locky\\.v7|Zeus\\.v7|EternalRocks\\.v7",
      "risk_level": "critical",
      "description": "Locky v7 exploit"
    },
    "locky_v8_exploit": {
      "regex": "Locky\\.v8|Zeus\\.v8|EternalRocks\\.v8",
      "risk_level": "critical",
      "description": "Locky v8 exploit"
    },
    "locky_v9_exploit": {
      "regex": "Locky\\.v9|Zeus\\.v9|EternalRocks\\.v9",
      "risk_level": "critical",
      "description": "Locky v9 exploit"
    },
    "locky_v10_exploit": {
      "regex": "Locky\\.v10|Zeus\\.v10|EternalRocks\\.v10",
      "risk_level": "critical",
      "description": "Locky v10 exploit"
    },
    "cerber_v2_exploit": {
      "regex": "Cerber\\.v2|Zeus\\.v2|EternalRocks\\.v2",
      "risk_level": "critical",
      "description": "Cerber v2 exploit"
    },
    "cerber_v3_exploit": {
      "regex": "Cerber\\.v3|Zeus\\.v3|EternalRocks\\.v3",
      "risk_level": "critical",
      "description": "Cerber v3 exploit"
    },
    "cerber_v4_exploit": {
      "regex": "Cerber\\.v4|Zeus\\.v4|EternalRocks\\.v4",
      "risk_level": "critical",
      "description": "Cerber v4 exploit"
    },
    "cerber_v5_exploit": {
      "regex": "Cerber\\.v5|Zeus\\.v5|EternalRocks\\.v5",
      "risk_level": "critical",
      "description": "Cerber v5 exploit"
    },
    "cerber_v6_exploit": {
      "regex": "Cerber\\.v6|Zeus\\.v6|EternalRocks\\.v6",
      "risk_level": "critical",
      "description": "Cerber v6 exploit"
    },
    "cerber_v7_exploit": {
      "regex": "Cerber\\.v7|Zeus\\.v7|EternalRocks\\.v7",
      "risk_level": "critical",
      "description": "Cerber v7 exploit"
    },
    "cerber_v8_exploit": {
      "regex": "Cerber\\.v8|Zeus\\.v8|EternalRocks\\.v8",
      "risk_level": "critical",
      "description": "Cerber v8 exploit"
    },
    "cerber_v9_exploit": {
      "regex": "Cerber\\.v9|Zeus\\.v9|EternalRocks\\.v9",
      "risk_level": "critical",
      "description": "Cerber v9 exploit"
    },
    "cerber_v10_exploit": {
      "regex": "Cerber\\.v10|Zeus\\.v10|EternalRocks\\.v10",
      "risk_level": "critical",
      "description": "Cerber v10 exploit"
    },
    "cryptolocker_v11_exploit": {
      "regex": "CryptoLocker\\.v11|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v11 exploit"
    },
    "cryptolocker_v12_exploit": {
      "regex": "CryptoLocker\\.v12|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v12 exploit"
    },
    "cryptolocker_v13_exploit": {
      "regex": "CryptoLocker\\.v13|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v13 exploit"
    },
    "cryptolocker_v14_exploit": {
      "regex": "CryptoLocker\\.v14|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v14 exploit"
    },
    "cryptolocker_v15_exploit": {
      "regex": "CryptoLocker\\.v15|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v15 exploit"
    },
    "cryptolocker_v16_exploit": {
      "regex": "CryptoLocker\\.v16|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v16 exploit"
    },
    "cryptolocker_v17_exploit": {
      "regex": "CryptoLocker\\.v17|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v17 exploit"
    },
    "cryptolocker_v18_exploit": {
      "regex": "CryptoLocker\\.v18|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v18 exploit"
    },
    "cryptolocker_v19_exploit": {
      "regex": "CryptoLocker\\.v19|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v19 exploit"
    },
    "cryptolocker_v20_exploit": {
      "regex": "CryptoLocker\\.v20|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoLocker v20 exploit"
    },
    "teslacrypt_v2_exploit": {
      "regex": "TeslaCrypt\\.v2|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v2 exploit"
    },
    "teslacrypt_v3_exploit": {
      "regex": "TeslaCrypt\\.v3|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v3 exploit"
    },
    "teslacrypt_v4_exploit": {
      "regex": "TeslaCrypt\\.v4|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v4 exploit"
    },
    "teslacrypt_v5_exploit": {
      "regex": "TeslaCrypt\\.v5|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v5 exploit"
    },
    "teslacrypt_v6_exploit": {
      "regex": "TeslaCrypt\\.v6|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v6 exploit"
    },
    "teslacrypt_v7_exploit": {
      "regex": "TeslaCrypt\\.v7|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v7 exploit"
    },
    "teslacrypt_v8_exploit": {
      "regex": "TeslaCrypt\\.v8|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v8 exploit"
    },
    "teslacrypt_v9_exploit": {
      "regex": "TeslaCrypt\\.v9|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v9 exploit"
    },
    "teslacrypt_v10_exploit": {
      "regex": "TeslaCrypt\\.v10|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "TeslaCrypt v10 exploit"
    },
    "cryptowall_v2_exploit": {
      "regex": "CryptoWall\\.v2|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v2 exploit"
    },
    "cryptowall_v3_exploit": {
      "regex": "CryptoWall\\.v3|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v3 exploit"
    },
    "cryptowall_v4_exploit": {
      "regex": "CryptoWall\\.v4|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v4 exploit"
    },
    "cryptowall_v5_exploit": {
      "regex": "CryptoWall\\.v5|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v5 exploit"
    },
    "cryptowall_v6_exploit": {
      "regex": "CryptoWall\\.v6|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v6 exploit"
    },
    "cryptowall_v7_exploit": {
      "regex": "CryptoWall\\.v7|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v7 exploit"
    },
    "cryptowall_v8_exploit": {
      "regex": "CryptoWall\\.v8|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v8 exploit"
    },
    "cryptowall_v9_exploit": {
      "regex": "CryptoWall\\.v9|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v9 exploit"
    },
    "cryptowall_v10_exploit": {
      "regex": "CryptoWall\\.v10|Zeus|EternalRocks",
      "risk_level": "critical",
      "description": "CryptoWall v10 exploit"
    },
    "heartbleed_v2_exploit": {
      "regex": "Heartbleed\\.v2|CVE-2014-0160\\.v2|OpenSSL\\.v2",
      "risk_level": "critical",
      "description": "Heartbleed v2 exploit"
    },
    "heartbleed_v3_exploit": {
      "regex": "Heartbleed\\.v3|CVE-2014-0160\\.v3|OpenSSL\\.v3",
      "risk_level": "critical",
      "description": "Heartbleed v3 exploit"
    },
    "heartbleed_v4_exploit": {
      "regex": "Heartbleed\\.v4|CVE-2014-0160\\.v4|OpenSSL\\.v4",
      "risk_level": "critical",
      "description": "Heartbleed v4 exploit"
    },
    "heartbleed_v5_exploit": {
      "regex": "Heartbleed\\.v5|CVE-2014-0160\\.v5|OpenSSL\\.v5",
      "risk_level": "critical",
      "description": "Heartbleed v5 exploit"
    },
    "heartbleed_v6_exploit": {
      "regex": "Heartbleed\\.v6|CVE-2014-0160\\.v6|OpenSSL\\.v6",
      "risk_level": "critical",
      "description": "Heartbleed v6 exploit"
    },
    "heartbleed_v7_exploit": {
      "regex": "Heartbleed\\.v7|CVE-2014-0160\\.v7|OpenSSL\\.v7",
      "risk_level": "critical",
      "description": "Heartbleed v7 exploit"
    },
    "heartbleed_v8_exploit": {
      "regex": "Heartbleed\\.v8|CVE-2014-0160\\.v8|OpenSSL\\.v8",
      "risk_level": "critical",
      "description": "Heartbleed v8 exploit"
    },
    "heartbleed_v9_exploit": {
      "regex": "Heartbleed\\.v9|CVE-2014-0160\\.v9|OpenSSL\\.v9",
      "risk_level": "critical",
      "description": "Heartbleed v9 exploit"
    },
    "heartbleed_v10_exploit": {
      "regex": "Heartbleed\\.v10|CVE-2014-0160\\.v10|OpenSSL\\.v10",
      "risk_level": "critical",
      "description": "Heartbleed v10 exploit"
    },
    "shellshock_v2_exploit": {
      "regex": "Shellshock\\.v2|CVE-2014-6271\\.v2|bash.*-c.*\\$\\{.*\\}\\.v2",
      "risk_level": "critical",
      "description": "Shellshock v2 exploit"
    },
    "shellshock_v3_exploit": {
      "regex": "Shellshock\\.v3|CVE-2014-6271\\.v3|bash.*-c.*\\$\\{.*\\}\\.v3",
      "risk_level": "critical",
      "description": "Shellshock v3 exploit"
    },
    "shellshock_v4_exploit": {
      "regex": "Shellshock\\.v4|CVE-2014-6271\\.v4|bash.*-c.*\\$\\{.*\\}\\.v4",
      "risk_level": "critical",
      "description": "Shellshock v4 exploit"
    },
    "shellshock_v5_exploit": {
      "regex": "Shellshock\\.v5|CVE-2014-6271\\.v5|bash.*-c.*\\$\\{.*\\}\\.v5",
      "risk_level": "critical",
      "description": "Shellshock v5 exploit"
    },
    "shellshock_v6_exploit": {
      "regex": "Shellshock\\.v6|CVE-2014-6271\\.v6|bash.*-c.*\\$\\{.*\\}\\.v6",
      "risk_level": "critical",
      "description": "Shellshock v6 exploit"
    },
    "shellshock_v7_exploit": {
      "regex": "Shellshock\\.v7|CVE-2014-6271\\.v7|bash.*-c.*\\$\\{.*\\}\\.v7",
      "risk_level": "critical",
      "description": "Shellshock v7 exploit"
    },
    "shellshock_v8_exploit": {
      "regex": "Shellshock\\.v8|CVE-2014-6271\\.v8|bash.*-c.*\\$\\{.*\\}\\.v8",
      "risk_level": "critical",
      "description": "Shellshock v8 exploit"
    },
    "shellshock_v9_exploit": {
      "regex": "Shellshock\\.v9|CVE-2014-6271\\.v9|bash.*-c.*\\$\\{.*\\}\\.v9",
      "risk_level": "critical",
      "description": "Shellshock v9 exploit"
    },
    "shellshock_v10_exploit": {
      "regex": "Shellshock\\.v10|CVE-2014-6271\\.v10|bash.*-c.*\\$\\{.*\\}\\.v10",
      "risk_level": "critical",
      "description": "Shellshock v10 exploit"
    },
    "struts_v2_exploit": {
      "regex": "Struts\\.v2|CVE-2017-5638\\.v2|CVE-2017-9805\\.v2",
      "risk_level": "critical",
      "description": "Apache Struts v2 exploit"
    },
    "struts_v3_exploit": {
      "regex": "Struts\\.v3|CVE-2017-5638\\.v3|CVE-2017-9805\\.v3",
      "risk_level": "critical",
      "description": "Apache Struts v3 exploit"
    },
    "struts_v4_exploit": {
      "regex": "Struts\\.v4|CVE-2017-5638\\.v4|CVE-2017-9805\\.v4",
      "risk_level": "critical",
      "description": "Apache Struts v4 exploit"
    },
    "struts_v5_exploit": {
      "regex": "Struts\\.v5|CVE-2017-5638\\.v5|CVE-2017-9805\\.v5",
      "risk_level": "critical",
      "description": "Apache Struts v5 exploit"
    },
    "struts_v6_exploit": {
      "regex": "Struts\\.v6|CVE-2017-5638\\.v6|CVE-2017-9805\\.v6",
      "risk_level": "critical",
      "description": "Apache Struts v6 exploit"
    },
    "struts_v7_exploit": {
      "regex": "Struts\\.v7|CVE-2017-5638\\.v7|CVE-2017-9805\\.v7",
      "risk_level": "critical",
      "description": "Apache Struts v7 exploit"
    },
    "struts_v8_exploit": {
      "regex": "Struts\\.v8|CVE-2017-5638\\.v8|CVE-2017-9805\\.v8",
      "risk_level": "critical",
      "description": "Apache Struts v8 exploit"
    },
    "struts_v9_exploit": {
      "regex": "Struts\\.v9|CVE-2017-5638\\.v9|CVE-2017-9805\\.v9",
      "risk_level": "critical",
      "description": "Apache Struts v9 exploit"
    },
         "struts_v10_exploit": {
       "regex": "Struts\\.v10|CVE-2017-5638\\.v10|CVE-2017-9805\\.v10",
       "risk_level": "critical",
       "description": "Apache Struts v10 exploit"
     },
     "spring_security_bypass": {
       "regex": "@PreAuthorize.*\\$\\{.*\\}|@Secured.*\\$\\{.*\\}|hasRole.*\\$\\{.*\\}",
      "risk_level": "high",
       "description": "Spring Security bypass"
    },
     "django_security_bypass": {
       "regex": "@login_required.*\\$\\{.*\\}|@permission_required.*\\$\\{.*\\}|is_authenticated.*\\$\\{.*\\}",
      "risk_level": "high",
       "description": "Django security bypass"
     },
     "laravel_security_bypass": {
       "regex": "Auth::check.*\\$\\{.*\\}|Gate::allows.*\\$\\{.*\\}|Policy::check.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel security bypass"
     },
     "anti_debugging": {
       "regex": "IsDebuggerPresent|CheckRemoteDebuggerPresent|GetTickCount|QueryPerformanceCounter",
      "risk_level": "medium",
       "description": "Anti-debugging techniques"
     },
     "anti_vm_detection": {
       "regex": "VMware|VirtualBox|VBox|QEMU|Xen|Hyper-V",
       "risk_level": "medium",
       "description": "Anti-VM detection"
     },
     "code_obfuscation": {
       "regex": "eval\\(.*\\$\\{.*\\}\\)|Function\\(.*\\$\\{.*\\}\\)|setTimeout\\(.*\\$\\{.*\\}\\)",
      "risk_level": "high",
       "description": "Code obfuscation"
    },
     "dns_tunneling": {
       "regex": "nslookup.*\\$\\{.*\\}|dig.*\\$\\{.*\\}|host.*\\$\\{.*\\}",
      "risk_level": "high",
       "description": "DNS tunneling"
     },
     "icmp_tunneling": {
       "regex": "ping.*-c.*\\$\\{.*\\}|ping.*-n.*\\$\\{.*\\}|ping.*-t.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ICMP tunneling"
     },
     "http_tunneling": {
       "regex": "curl.*-X.*POST.*\\$\\{.*\\}|wget.*--post-data.*\\$\\{.*\\}",
      "risk_level": "medium",
       "description": "HTTP tunneling"
    },
     "sql_injection_advanced": {
       "regex": "UNION.*SELECT.*\\$\\{.*\\}|OR.*1=1.*\\$\\{.*\\}|AND.*1=1.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Advanced SQL injection"
     },
     "xss_advanced": {
       "regex": "<script.*\\$\\{.*\\}</script>|javascript:.*\\$\\{.*\\}|onload=.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Advanced XSS"
     },
     "csrf_attack": {
       "regex": "document\\.cookie.*\\$\\{.*\\}|XMLHttpRequest.*\\$\\{.*\\}|fetch.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "CSRF attack"
     },
     "android_security_bypass": {
       "regex": "android\\.os\\.Build|getPackageInfo|getSystemService.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Android security bypass"
     },
     "ios_security_bypass": {
       "regex": "UIDevice.*systemName|NSBundle.*bundleIdentifier|CFBundleIdentifier.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "iOS security bypass"
     },
     "mobile_reverse_engineering": {
       "regex": "Frida|Xposed|Substrate|Cydia|Jailbreak|Root",
       "risk_level": "medium",
       "description": "Mobile reverse engineering"
     },
     "iot_device_exploitation": {
       "regex": "telnet.*\\$\\{.*\\}|ssh.*\\$\\{.*\\}|ftp.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "IoT device exploitation"
     },
     "firmware_analysis_bypass": {
       "regex": "binwalk|firmwalker|firmwalker|firmwalker",
       "risk_level": "medium",
       "description": "Firmware analysis bypass"
     },
     "smart_home_security_bypass": {
       "regex": "HomeKit|SmartThings|Wink|IFTTT.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Smart home security bypass"
     },
     "crypto_mining_malware": {
       "regex": "xmrig|cpuminer|ccminer|ethminer|gminer",
       "risk_level": "high",
       "description": "Crypto mining malware"
     },
     "mining_pool_attacks": {
       "regex": "stratum.*\\$\\{.*\\}|pool.*\\$\\{.*\\}|mining.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Mining pool attacks"
     },
     "wallet_theft_patterns": {
       "regex": "wallet.*dat|keystore.*json|private.*key.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Wallet theft patterns"
     },
     "express_js_security": {
       "regex": "express\\.Router.*\\$\\{.*\\}|app\\.use.*\\$\\{.*\\}|res\\.send.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js security bypass"
     },
     "ruby_rails_security": {
       "regex": "before_action.*\\$\\{.*\\}|skip_before_action.*\\$\\{.*\\}|authenticate_user.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails security bypass"
     },
     "asp_net_security": {
       "regex": "\\[Authorize\\].*\\$\\{.*\\}|User\\.IsInRole.*\\$\\{.*\\}|HttpContext\\.User.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET security bypass"
     },
     "flask_security": {
       "regex": "@login_required.*\\$\\{.*\\}|@roles_required.*\\$\\{.*\\}|current_user.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flask security bypass"
     },
     "fastapi_security": {
       "regex": "Depends.*\\$\\{.*\\}|Security.*\\$\\{.*\\}|get_current_user.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "FastAPI security bypass"
     },
     "anti_sandbox_evasion": {
       "regex": "GetSystemTime|GetLocalTime|GetTickCount64|QueryPerformanceFrequency",
       "risk_level": "medium",
       "description": "Anti-sandbox evasion"
     },
     "string_encryption": {
       "regex": "base64_decode.*\\$\\{.*\\}|rot13.*\\$\\{.*\\}|xor.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "String encryption"
     },
     "api_hooking_evasion": {
       "regex": "GetProcAddress|LoadLibrary|FreeLibrary|GetModuleHandle",
       "risk_level": "medium",
       "description": "API hooking evasion"
     },
     "process_injection_evasion": {
       "regex": "CreateRemoteThread|VirtualAllocEx|WriteProcessMemory|OpenProcess",
       "risk_level": "high",
       "description": "Process injection evasion"
     },
     "memory_scanning_evasion": {
       "regex": "VirtualProtect|VirtualAlloc|HeapAlloc|LocalAlloc",
       "risk_level": "medium",
       "description": "Memory scanning evasion"
     },
     "ssh_tunneling": {
       "regex": "ssh.*-L.*\\$\\{.*\\}|ssh.*-D.*\\$\\{.*\\}|ssh.*-R.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "SSH tunneling"
     },
     "vpn_abuse": {
       "regex": "openvpn.*\\$\\{.*\\}|wireguard.*\\$\\{.*\\}|ipsec.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "VPN abuse"
     },
     "proxy_abuse": {
       "regex": "squid.*\\$\\{.*\\}|nginx.*proxy.*\\$\\{.*\\}|haproxy.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Proxy abuse"
     },
     "port_scanning": {
       "regex": "nmap.*\\$\\{.*\\}|masscan.*\\$\\{.*\\}|netcat.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Port scanning"
     },
     "network_reconnaissance": {
       "regex": "traceroute.*\\$\\{.*\\}|ping.*sweep.*\\$\\{.*\\}|arp.*scan.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Network reconnaissance"
     },
     "session_hijacking": {
       "regex": "session.*id.*\\$\\{.*\\}|cookie.*\\$\\{.*\\}|token.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Session hijacking"
     },
     "clickjacking": {
       "regex": "iframe.*\\$\\{.*\\}|z-index.*\\$\\{.*\\}|opacity.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Clickjacking"
     },
     "open_redirects": {
       "regex": "redirect.*\\$\\{.*\\}|location.*\\$\\{.*\\}|url.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Open redirects"
     },
     "server_side_request_forgery": {
       "regex": "curl.*\\$\\{.*\\}|file_get_contents.*\\$\\{.*\\}|wget.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Server-side request forgery"
     },
     "xml_external_entity": {
       "regex": "xml.*external.*entity.*\\$\\{.*\\}|XXE.*\\$\\{.*\\}|DOCTYPE.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "XML external entity injection"
     },
     "json_injection": {
       "regex": "JSON\\.parse.*\\$\\{.*\\}|JSON\\.stringify.*\\$\\{.*\\}|json_decode.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "JSON injection"
     },
     "graphql_injection": {
       "regex": "query.*\\$\\{.*\\}|mutation.*\\$\\{.*\\}|subscription.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "GraphQL injection"
     },
     "react_native_security": {
       "regex": "react-native.*\\$\\{.*\\}|AsyncStorage.*\\$\\{.*\\}|NetInfo.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "React Native security bypass"
     },
     "flutter_security": {
       "regex": "flutter.*\\$\\{.*\\}|SharedPreferences.*\\$\\{.*\\}|http.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flutter security bypass"
     },
     "certificate_pinning_bypass": {
       "regex": "ssl.*pinning.*\\$\\{.*\\}|certificate.*pinning.*\\$\\{.*\\}|public.*key.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Certificate pinning bypass"
     },
     "root_detection_bypass": {
       "regex": "isRooted.*\\$\\{.*\\}|checkRoot.*\\$\\{.*\\}|detectRoot.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Root detection bypass"
     },
     "jailbreak_detection_bypass": {
       "regex": "isJailbroken.*\\$\\{.*\\}|checkJailbreak.*\\$\\{.*\\}|detectJailbreak.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Jailbreak detection bypass"
     },
     "mobile_malware_patterns": {
       "regex": "trojan.*\\$\\{.*\\}|spyware.*\\$\\{.*\\}|adware.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Mobile malware patterns"
     },
     "industrial_iot_attacks": {
       "regex": "scada.*\\$\\{.*\\}|plc.*\\$\\{.*\\}|hmi.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Industrial IoT attacks"
    },
     "medical_device_security": {
       "regex": "medical.*device.*\\$\\{.*\\}|patient.*monitor.*\\$\\{.*\\}|mri.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Medical device security"
    },
     "automotive_security_bypass": {
       "regex": "can.*bus.*\\$\\{.*\\}|ecu.*\\$\\{.*\\}|obd.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Automotive security bypass"
     },
     "wearable_device_security": {
       "regex": "fitbit.*\\$\\{.*\\}|apple.*watch.*\\$\\{.*\\}|samsung.*gear.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Wearable device security"
     },
     "blockchain_attacks": {
       "regex": "blockchain.*\\$\\{.*\\}|smart.*contract.*\\$\\{.*\\}|solidity.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Blockchain attacks"
     },
     "defi_security_bypass": {
       "regex": "defi.*\\$\\{.*\\}|yield.*farming.*\\$\\{.*\\}|liquidity.*pool.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "DeFi security bypass"
     },
     "nft_security_issues": {
       "regex": "nft.*\\$\\{.*\\}|non.*fungible.*token.*\\$\\{.*\\}|erc721.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "NFT security issues"
     },
     "mining_botnet_detection": {
       "regex": "botnet.*\\$\\{.*\\}|mining.*pool.*\\$\\{.*\\}|worker.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Mining botnet detection"
     },
     "crypto_exchange_attacks": {
       "regex": "exchange.*\\$\\{.*\\}|trading.*\\$\\{.*\\}|order.*book.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Crypto exchange attacks"
    },
     "mining_pool_hijacking": {
       "regex": "pool.*hijacking.*\\$\\{.*\\}|51.*attack.*\\$\\{.*\\}|double.*spend.*\\$\\{.*\\}",
      "risk_level": "critical",
       "description": "Mining pool hijacking"
    },
     "docker_container_escape": {
       "regex": "docker.*run.*--privileged|docker.*run.*--cap-add.*ALL|docker.*run.*--security-opt.*privileged",
      "risk_level": "critical",
       "description": "Docker container escape attempt"
    },
     "docker_socket_mount": {
       "regex": "docker.*run.*-v.*/var/run/docker.sock|docker.*run.*--volume.*docker.sock",
      "risk_level": "critical",
       "description": "Docker socket mount"
     },
     "docker_host_network": {
       "regex": "docker.*run.*--network.*host|docker.*run.*--net.*host",
       "risk_level": "high",
       "description": "Docker host network mode"
     },
     "docker_root_user": {
       "regex": "docker.*run.*-u.*0|docker.*run.*--user.*root",
       "risk_level": "high",
       "description": "Docker root user execution"
     },
     "docker_volume_escape": {
       "regex": "docker.*run.*-v.*/:/host|docker.*run.*--volume.*/:/host",
      "risk_level": "critical",
       "description": "Docker volume escape"
    },
     "kubernetes_privileged_pod": {
       "regex": "privileged.*true|securityContext.*privileged.*true",
      "risk_level": "critical",
       "description": "Kubernetes privileged pod"
     },
     "kubernetes_host_path": {
       "regex": "hostPath.*path.*/|volumeMounts.*hostPath",
       "risk_level": "high",
       "description": "Kubernetes host path mount"
     },
     "kubernetes_host_network": {
       "regex": "hostNetwork.*true|hostPort.*\\d+",
       "risk_level": "high",
       "description": "Kubernetes host network"
     },
     "kubernetes_service_account_token": {
       "regex": "automountServiceAccountToken.*true|serviceAccountName.*default",
       "risk_level": "medium",
       "description": "Kubernetes service account token"
     },
     "aws_cli_credentials": {
       "regex": "aws.*configure.*set.*aws_access_key_id|aws.*configure.*set.*aws_secret_access_key",
      "risk_level": "critical",
       "description": "AWS CLI credentials exposure"
    },
     "aws_iam_escalation": {
       "regex": "aws.*iam.*create-access-key|aws.*iam.*attach-user-policy",
      "risk_level": "critical",
       "description": "AWS IAM privilege escalation"
     },
     "aws_s3_public_access": {
       "regex": "aws.*s3.*put-bucket-acl.*--grant-read.*uri.*http://acs.amazonaws.com/groups/global/AllUsers",
       "risk_level": "high",
       "description": "AWS S3 public access"
     },
     "aws_ec2_metadata": {
       "regex": "curl.*169.254.169.254|wget.*169.254.169.254",
       "risk_level": "medium",
       "description": "AWS EC2 metadata access"
     },
     "azure_service_principal": {
       "regex": "az.*ad.*sp.*create-for-rbac|az.*account.*get-access-token",
      "risk_level": "critical",
       "description": "Azure service principal creation"
     },
     "azure_vm_extension": {
       "regex": "az.*vm.*extension.*set|az.*vm.*run-command",
       "risk_level": "high",
       "description": "Azure VM extension execution"
     },
     "azure_key_vault_access": {
       "regex": "az.*keyvault.*secret.*download|az.*keyvault.*certificate.*download",
       "risk_level": "critical",
       "description": "Azure Key Vault access"
     },
     "gcp_service_account_key": {
       "regex": "gcloud.*iam.*service-accounts.*keys.*create|gcloud.*auth.*activate-service-account",
       "risk_level": "critical",
       "description": "GCP service account key creation"
     },
     "gcp_compute_instance": {
       "regex": "gcloud.*compute.*instances.*create|gcloud.*compute.*instances.*set-metadata",
       "risk_level": "high",
       "description": "GCP compute instance manipulation"
     },
     "terraform_state_manipulation": {
       "regex": "terraform.*state.*mv|terraform.*state.*rm|terraform.*import",
       "risk_level": "high",
       "description": "Terraform state manipulation"
     },
     "terraform_provider_config": {
       "regex": "terraform.*init.*-backend-config|terraform.*backend.*config",
       "risk_level": "medium",
       "description": "Terraform provider configuration"
     },
     "ansible_vault_password": {
       "regex": "ansible-vault.*decrypt|ansible-vault.*view",
       "risk_level": "critical",
       "description": "Ansible vault password exposure"
     },
     "ansible_playbook_injection": {
       "regex": "ansible-playbook.*-e.*\\$\\{.*\\}|ansible-playbook.*--extra-vars.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ansible playbook injection"
     },
     "helm_chart_injection": {
       "regex": "helm.*install.*--set.*\\$\\{.*\\}|helm.*upgrade.*--set.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Helm chart injection"
     },
     "spring4shell_cve_2022_22965": {
       "regex": "class.*\\$\\{.*\\}|method.*\\$\\{.*\\}|field.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22965"
     },
     "spring4shell_cve_2022_22963": {
       "regex": "spring.*cloud.*function.*\\$\\{.*\\}|function.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22963"
     },
     "spring4shell_cve_2022_22950": {
       "regex": "spring.*cloud.*gateway.*\\$\\{.*\\}|gateway.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22950"
     },
     "log4shell_cve_2021_44228": {
       "regex": "\\$\\{jndi:ldap://|\\$\\{jndi:rmi://|\\$\\{jndi:dns://",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-44228"
     },
     "log4shell_cve_2021_45046": {
       "regex": "\\$\\{jndi:ldap://.*\\$\\{.*\\}|\\$\\{jndi:rmi://.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-45046"
     },
     "log4shell_cve_2021_45105": {
       "regex": "\\$\\{jndi:.*\\$\\{.*\\}.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-45105"
     },
     "proxyshell_cve_2021_34473": {
       "regex": "powershell.*-enc.*[A-Za-z0-9+/]{20,}|powershell.*-encodedcommand.*[A-Za-z0-9+/]{20,}",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-34473"
     },
     "proxyshell_cve_2021_34523": {
       "regex": "exchange.*powershell.*-enc|exchange.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-34523"
     },
     "proxyshell_cve_2021_31207": {
       "regex": "exchange.*autodiscover.*powershell|exchange.*ecp.*powershell",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-31207"
     },
     "proxylogon_cve_2021_26855": {
       "regex": "exchange.*autodiscover.*authentication.*bypass|exchange.*ecp.*authentication.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26855"
     },
     "proxylogon_cve_2021_26857": {
       "regex": "exchange.*autodiscover.*deserialization|exchange.*ecp.*deserialization",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26857"
     },
     "proxylogon_cve_2021_26858": {
       "regex": "exchange.*autodiscover.*post.*authentication|exchange.*ecp.*post.*authentication",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26858"
     },
     "zerologon_cve_2020_1472": {
       "regex": "netlogon.*privilege.*escalation|netlogon.*authentication.*bypass",
       "risk_level": "critical",
       "description": "ZeroLogon CVE-2020-1472"
     },
     "printnightmare_cve_2021_1675": {
       "regex": "spoolsv.*privilege.*escalation|print.*spooler.*exploit",
       "risk_level": "critical",
       "description": "PrintNightmare CVE-2021-1675"
     },
     "printnightmare_cve_2021_34527": {
       "regex": "windows.*print.*spooler.*rce|print.*spooler.*remote.*code.*execution",
       "risk_level": "critical",
       "description": "PrintNightmare CVE-2021-34527"
     },
     "eternalblue_ms17_010": {
       "regex": "smb.*eternalblue|ms17_010.*exploit|smb.*vulnerability.*exploitation",
       "risk_level": "critical",
       "description": "EternalBlue MS17-010"
     },
     "wannacry_ransomware": {
       "regex": "wannacry.*encrypt|wannacry.*ransomware|wannacry.*bitcoin.*address",
       "risk_level": "critical",
       "description": "WannaCry ransomware"
     },
     "notpetya_ransomware": {
       "regex": "notpetya.*encrypt|notpetya.*ransomware|notpetya.*mbr.*overwrite",
       "risk_level": "critical",
       "description": "NotPetya ransomware"
     },
     "ryuk_ransomware": {
       "regex": "ryuk.*encrypt|ryuk.*ransomware|ryuk.*bitcoin.*wallet",
       "risk_level": "critical",
       "description": "Ryuk ransomware"
     },
     "revil_ransomware": {
       "regex": "revil.*encrypt|revil.*ransomware|revil.*double.*extortion",
       "risk_level": "critical",
       "description": "REvil ransomware"
     },
     "heartbleed_cve_2014_0160": {
       "regex": "openssl.*heartbleed|heartbleed.*exploit|openssl.*vulnerability",
       "risk_level": "critical",
       "description": "Heartbleed CVE-2014-0160"
     },
     "shellshock_cve_2014_6271": {
       "regex": "bash.*shellshock|shellshock.*exploit|bash.*vulnerability",
       "risk_level": "critical",
       "description": "Shellshock CVE-2014-6271"
     },
     "struts_cve_2017_5638": {
       "regex": "struts.*cve.*2017.*5638|struts.*ognl.*injection|struts.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2017-5638"
     },
     "struts_cve_2017_9805": {
       "regex": "struts.*cve.*2017.*9805|struts.*rest.*plugin.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2017-9805"
     },
     "struts_cve_2018_11776": {
       "regex": "struts.*cve.*2018.*11776|struts.*namespace.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2018-11776"
     },
     "spring_expression_injection": {
       "regex": "spel.*\\$\\{.*\\}|spring.*expression.*\\$\\{.*\\}|@spel.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring expression injection"
     },
     "spring_ognl_injection": {
       "regex": "ognl.*\\$\\{.*\\}|@ognl.*\\$\\{.*\\}|spring.*ognl.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring OGNL injection"
     },
     "django_template_injection": {
       "regex": "django.*template.*\\$\\{.*\\}|jinja2.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django template injection"
     },
     "django_orm_injection": {
       "regex": "django.*orm.*\\$\\{.*\\}|queryset.*\\$\\{.*\\}|model.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django ORM injection"
     },
     "laravel_artisan_injection": {
       "regex": "artisan.*\\$\\{.*\\}|php.*artisan.*\\$\\{.*\\}|laravel.*command.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Artisan injection"
     },
     "laravel_eloquent_injection": {
       "regex": "eloquent.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Eloquent injection"
     },
     "express_route_injection": {
       "regex": "express.*route.*\\$\\{.*\\}|app\\.get.*\\$\\{.*\\}|app\\.post.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js route injection"
     },
     "express_middleware_bypass": {
       "regex": "express.*middleware.*bypass|app\\.use.*\\$\\{.*\\}|middleware.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js middleware bypass"
     },
     "rails_erb_injection": {
       "regex": "erb.*\\$\\{.*\\}|rails.*erb.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ERB injection"
     },
     "rails_active_record_injection": {
       "regex": "activerecord.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ActiveRecord injection"
     },
     "aspnet_viewstate_manipulation": {
       "regex": "viewstate.*\\$\\{.*\\}|__viewstate.*\\$\\{.*\\}|aspnet.*viewstate.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET ViewState manipulation"
     },
     "aspnet_form_authentication_bypass": {
       "regex": "forms.*authentication.*bypass|aspnet.*auth.*bypass|authentication.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET form authentication bypass"
     },
     "flask_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|flask.*template.*\\$\\{.*\\}|render_template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flask Jinja2 injection"
     },
     "fastapi_dependency_injection": {
       "regex": "fastapi.*dependency.*\\$\\{.*\\}|depends.*\\$\\{.*\\}|dependency.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "FastAPI dependency injection abuse"
     },
     "anti_debugging_detection": {
       "regex": "isdebuggerpresent|checkremotedebuggerpresent|debugger.*detection",
       "risk_level": "medium",
       "description": "Anti-debugging detection"
     },
     "anti_vm_detection": {
       "regex": "virtualbox|vmware|vbox|vm.*detection|sandbox.*detection",
       "risk_level": "medium",
       "description": "Anti-VM detection"
     },
     "code_obfuscation_string_encryption": {
       "regex": "string.*encryption|obfuscate.*string|encrypt.*string",
       "risk_level": "medium",
       "description": "Code obfuscation string encryption"
     },
     "code_obfuscation_variable_renaming": {
       "regex": "variable.*renaming|rename.*variable|obfuscate.*variable",
       "risk_level": "medium",
       "description": "Code obfuscation variable renaming"
     },
     "api_hooking_function_hooking": {
       "regex": "hook.*function|api.*hooking|function.*hook",
       "risk_level": "high",
       "description": "API hooking function hooking"
     },
     "api_hooking_system_call_interception": {
       "regex": "system.*call.*interception|syscall.*hook|intercept.*syscall",
       "risk_level": "high",
       "description": "API hooking system call interception"
     },
     "process_injection_dll_injection": {
       "regex": "dll.*injection|inject.*dll|loadlibrary.*injection",
       "risk_level": "critical",
       "description": "Process injection DLL injection"
     },
     "process_injection_code_cave_injection": {
       "regex": "code.*cave.*injection|cave.*injection|inject.*cave",
       "risk_level": "critical",
       "description": "Process injection code cave injection"
     },
     "memory_scanning_process_memory_manipulation": {
       "regex": "process.*memory.*manipulation|memory.*scanning|manipulate.*memory",
       "risk_level": "high",
       "description": "Memory scanning process memory manipulation"
     },
     "ssh_tunneling_port_forwarding": {
       "regex": "ssh.*-L.*\\d+:.*:\\d+|ssh.*-D.*\\d+|ssh.*tunnel",
       "risk_level": "medium",
       "description": "SSH tunneling port forwarding"
     },
     "ssh_tunneling_reverse_tunneling": {
       "regex": "ssh.*-R.*\\d+:.*:\\d+|reverse.*tunnel|ssh.*reverse",
       "risk_level": "medium",
       "description": "SSH tunneling reverse tunneling"
     },
     "vpn_proxy_abuse_tunnel_manipulation": {
       "regex": "vpn.*tunnel.*manipulation|proxy.*tunnel|tunnel.*manipulation",
       "risk_level": "medium",
       "description": "VPN/proxy abuse tunnel manipulation"
     },
     "port_scanning_network_reconnaissance": {
       "regex": "nmap.*-sS|nmap.*-sU|nmap.*-p.*\\d+",
       "risk_level": "medium",
       "description": "Port scanning network reconnaissance"
     },
     "network_reconnaissance_host_discovery": {
       "regex": "host.*discovery|network.*scanning|reconnaissance.*scan",
       "risk_level": "medium",
       "description": "Network reconnaissance host discovery"
     },
     "session_hijacking_cookie_manipulation": {
       "regex": "cookie.*manipulation|session.*hijacking|hijack.*session",
       "risk_level": "high",
       "description": "Session hijacking cookie manipulation"
     },
     "clickjacking_ui_redressing": {
       "regex": "ui.*redressing|clickjacking|frame.*injection",
       "risk_level": "medium",
       "description": "Clickjacking UI redressing"
     },
     "open_redirects_url_redirection_abuse": {
       "regex": "redirect.*\\$\\{.*\\}|url.*redirection.*\\$\\{.*\\}|redirect.*parameter",
       "risk_level": "medium",
       "description": "Open redirects URL redirection abuse"
     },
     "ssrf_server_side_request_forgery": {
       "regex": "ssrf.*\\$\\{.*\\}|server.*side.*request.*forgery|internal.*service.*access",
       "risk_level": "high",
       "description": "SSRF server-side request forgery"
     },
     "xml_injection_data_format_manipulation": {
       "regex": "xml.*\\$\\{.*\\}|xml.*injection|data.*format.*manipulation",
       "risk_level": "high",
       "description": "XML injection data format manipulation"
     },
     "json_injection_query_injection": {
       "regex": "json.*\\$\\{.*\\}|json.*injection|query.*injection",
       "risk_level": "high",
       "description": "JSON injection query injection"
     },
     "graphql_injection_query_injection": {
       "regex": "graphql.*\\$\\{.*\\}|graphql.*injection|query.*injection",
       "risk_level": "high",
       "description": "GraphQL injection query injection"
     },
     "android_bypass_root_detection_bypass": {
       "regex": "root.*detection.*bypass|android.*root.*bypass|bypass.*root.*detection",
       "risk_level": "medium",
       "description": "Android bypass root detection bypass"
     },
     "ios_bypass_jailbreak_detection_bypass": {
       "regex": "jailbreak.*detection.*bypass|ios.*jailbreak.*bypass|bypass.*jailbreak.*detection",
       "risk_level": "medium",
       "description": "iOS bypass jailbreak detection bypass"
     },
     "react_native_javascript_bridge_abuse": {
       "regex": "react.*native.*bridge.*abuse|javascript.*bridge.*\\$\\{.*\\}|native.*module.*injection",
       "risk_level": "high",
       "description": "React Native JavaScript bridge abuse"
     },
     "flutter_dart_code_injection": {
       "regex": "flutter.*dart.*injection|dart.*code.*\\$\\{.*\\}|platform.*channel.*abuse",
       "risk_level": "high",
       "description": "Flutter Dart code injection"
     },
     "smart_home_device_hijacking": {
       "regex": "smart.*home.*hijacking|device.*hijacking|automation.*abuse",
       "risk_level": "medium",
       "description": "Smart home device hijacking"
     },
     "industrial_iot_scada_manipulation": {
       "regex": "scada.*manipulation|plc.*programming|industrial.*iot.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Industrial IoT SCADA manipulation"
     },
     "medical_device_patient_data_access": {
       "regex": "medical.*device.*data.*access|patient.*data.*\\$\\{.*\\}|device.*control.*bypass",
       "risk_level": "critical",
       "description": "Medical device patient data access"
     },
     "automotive_can_bus_manipulation": {
       "regex": "can.*bus.*manipulation|ecu.*reprogramming|automotive.*security.*bypass",
       "risk_level": "critical",
       "description": "Automotive CAN bus manipulation"
     },
     "wearable_health_data_access": {
       "regex": "wearable.*health.*data.*access|device.*synchronization.*abuse|health.*data.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Wearable health data access"
     },
     "mining_malware_coinhive": {
       "regex": "coinhive.*mining|coinhive.*script|mining.*malware.*coinhive",
       "risk_level": "high",
       "description": "Mining malware Coinhive"
     },
     "mining_malware_xmrig": {
       "regex": "xmrig.*mining|xmrig.*malware|mining.*malware.*xmrig",
       "risk_level": "high",
       "description": "Mining malware XMRig"
     },
     "mining_pool_manipulation": {
       "regex": "mining.*pool.*manipulation|pool.*hijacking|hash.*rate.*theft",
       "risk_level": "high",
       "description": "Mining pool manipulation"
     },
     "wallet_theft_private_key_extraction": {
       "regex": "private.*key.*extraction|wallet.*theft|wallet\\.dat.*access",
       "risk_level": "critical",
       "description": "Wallet theft private key extraction"
     },
     "blockchain_51_attack": {
       "regex": "51.*attack|blockchain.*attack|double.*spending.*attempt",
       "risk_level": "critical",
       "description": "Blockchain 51% attack"
     },
     "defi_flash_loan_attack": {
       "regex": "flash.*loan.*attack|defi.*exploit|smart.*contract.*manipulation",
       "risk_level": "high",
       "description": "DeFi flash loan attack"
     },
     "nft_token_manipulation": {
       "regex": "nft.*token.*manipulation|marketplace.*abuse|token.*manipulation",
       "risk_level": "medium",
       "description": "NFT token manipulation"
     },
     "exchange_trading_bot_manipulation": {
       "regex": "trading.*bot.*manipulation|order.*book.*abuse|exchange.*attack",
       "risk_level": "critical",
       "description": "Exchange trading bot manipulation"
     },
     "docker_container_privilege_escalation": {
       "regex": "docker.*run.*--cap-add.*SYS_ADMIN|docker.*run.*--cap-add.*NET_ADMIN",
       "risk_level": "critical",
       "description": "Docker container privilege escalation"
     },
     "docker_container_resource_abuse": {
       "regex": "docker.*run.*--memory.*0|docker.*run.*--cpus.*0",
       "risk_level": "high",
       "description": "Docker container resource abuse"
     },
     "kubernetes_pod_security_context_bypass": {
       "regex": "runAsUser.*0|runAsGroup.*0|fsGroup.*0",
       "risk_level": "critical",
       "description": "Kubernetes pod security context bypass"
     },
     "kubernetes_pod_privilege_escalation": {
       "regex": "allowPrivilegeEscalation.*true|privileged.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod privilege escalation"
     },
     "aws_cloudformation_template_injection": {
       "regex": "cloudformation.*template.*\\$\\{.*\\}|cfn.*template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "AWS CloudFormation template injection"
     },
     "aws_lambda_function_injection": {
       "regex": "lambda.*function.*\\$\\{.*\\}|aws.*lambda.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "AWS Lambda function injection"
     },
     "azure_arm_template_injection": {
       "regex": "arm.*template.*\\$\\{.*\\}|azure.*template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Azure ARM template injection"
     },
     "azure_function_app_injection": {
       "regex": "function.*app.*\\$\\{.*\\}|azure.*function.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Azure Function App injection"
     },
     "gcp_cloud_function_injection": {
       "regex": "cloud.*function.*\\$\\{.*\\}|gcp.*function.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "GCP Cloud Function injection"
     },
     "terraform_remote_state_manipulation": {
       "regex": "terraform.*remote.*state.*\\$\\{.*\\}|backend.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform remote state manipulation"
     },
     "ansible_vault_password_file": {
       "regex": "ansible-vault.*decrypt|ansible-vault.*view",
       "risk_level": "critical",
       "description": "Ansible vault password file exposure"
     },
     "helm_secret_injection": {
       "regex": "helm.*secret.*\\$\\{.*\\}|--set.*secret.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Helm secret injection"
     },
     "spring_cloud_function_injection": {
       "regex": "spring.*cloud.*function.*\\$\\{.*\\}|function.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring Cloud Function injection"
     },
     "spring_cloud_gateway_injection": {
       "regex": "spring.*cloud.*gateway.*\\$\\{.*\\}|gateway.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring Cloud Gateway injection"
     },
     "log4j_jndi_injection_variants": {
       "regex": "\\$\\{jndi:ldaps://|\\$\\{jndi:corba://|\\$\\{jndi:iiop://",
       "risk_level": "critical",
       "description": "Log4j JNDI injection variants"
     },
     "log4j_lookup_injection": {
       "regex": "\\$\\{java:runtime|\\$\\{java:vm|\\$\\{java:os",
       "risk_level": "critical",
       "description": "Log4j lookup injection"
     },
     "proxyshell_exchange_autodiscover": {
       "regex": "autodiscover.*powershell.*-enc|autodiscover.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell Exchange Autodiscover"
     },
     "proxyshell_exchange_ecp": {
       "regex": "ecp.*powershell.*-enc|ecp.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell Exchange ECP"
     },
     "proxylogon_exchange_autodiscover_auth": {
       "regex": "autodiscover.*authentication.*bypass|autodiscover.*auth.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon Exchange Autodiscover authentication bypass"
     },
     "proxylogon_exchange_ecp_auth": {
       "regex": "ecp.*authentication.*bypass|ecp.*auth.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon Exchange ECP authentication bypass"
     },
     "zerologon_netlogon_privilege_escalation": {
       "regex": "netlogon.*privilege.*escalation|netlogon.*auth.*bypass",
       "risk_level": "critical",
       "description": "ZeroLogon Netlogon privilege escalation"
     },
     "printnightmare_spoolsv_exploit": {
       "regex": "spoolsv.*exploit|print.*spooler.*rce|spooler.*vulnerability",
       "risk_level": "critical",
       "description": "PrintNightmare spoolsv exploit"
     },
     "eternalblue_smb_exploit": {
       "regex": "smb.*eternalblue|ms17_010.*smb|smb.*vulnerability",
       "risk_level": "critical",
       "description": "EternalBlue SMB exploit"
     },
     "wannacry_encryption": {
       "regex": "wannacry.*encrypt|wannacry.*encryption|wannacry.*ransomware",
       "risk_level": "critical",
       "description": "WannaCry encryption"
     },
     "notpetya_mbr_overwrite": {
       "regex": "notpetya.*mbr.*overwrite|notpetya.*boot.*sector|notpetya.*encryption",
       "risk_level": "critical",
       "description": "NotPetya MBR overwrite"
     },
     "ryuk_encryption": {
       "regex": "ryuk.*encrypt|ryuk.*encryption|ryuk.*bitcoin.*wallet",
       "risk_level": "critical",
       "description": "Ryuk encryption"
     },
     "revil_double_extortion": {
       "regex": "revil.*double.*extortion|revil.*encrypt|revil.*ransomware",
       "risk_level": "critical",
       "description": "REvil double extortion"
     },
     "heartbleed_openssl_vulnerability": {
       "regex": "openssl.*heartbleed|heartbleed.*openssl|openssl.*vulnerability",
       "risk_level": "critical",
       "description": "Heartbleed OpenSSL vulnerability"
     },
     "shellshock_bash_vulnerability": {
       "regex": "bash.*shellshock|shellshock.*bash|bash.*vulnerability",
       "risk_level": "critical",
       "description": "Shellshock Bash vulnerability"
     },
     "struts_ognl_injection": {
       "regex": "struts.*ognl.*injection|ognl.*struts|struts.*vulnerability",
       "risk_level": "critical",
       "description": "Struts OGNL injection"
     },
     "struts_rest_plugin_vulnerability": {
       "regex": "struts.*rest.*plugin.*vulnerability|rest.*plugin.*struts",
       "risk_level": "critical",
       "description": "Struts REST plugin vulnerability"
     },
     "struts_namespace_vulnerability": {
       "regex": "struts.*namespace.*vulnerability|namespace.*struts",
       "risk_level": "critical",
       "description": "Struts namespace vulnerability"
     },
     "spring_spel_injection": {
       "regex": "spel.*\\$\\{.*\\}|spring.*spel.*\\$\\{.*\\}|@spel.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring SpEL injection"
     },
     "spring_ognl_injection_variants": {
       "regex": "ognl.*\\$\\{.*\\}|@ognl.*\\$\\{.*\\}|spring.*ognl.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring OGNL injection variants"
     },
     "django_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|django.*jinja2.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django Jinja2 injection"
     },
     "django_orm_injection": {
       "regex": "django.*orm.*\\$\\{.*\\}|queryset.*\\$\\{.*\\}|model.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django ORM injection"
     },
     "laravel_artisan_injection": {
       "regex": "artisan.*\\$\\{.*\\}|php.*artisan.*\\$\\{.*\\}|laravel.*command.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Artisan injection"
     },
     "laravel_eloquent_injection": {
       "regex": "eloquent.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Eloquent injection"
     },
     "express_route_injection": {
       "regex": "express.*route.*\\$\\{.*\\}|app\\.get.*\\$\\{.*\\}|app\\.post.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js route injection"
     },
     "express_middleware_bypass": {
       "regex": "express.*middleware.*bypass|app\\.use.*\\$\\{.*\\}|middleware.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js middleware bypass"
     },
     "rails_erb_injection": {
       "regex": "erb.*\\$\\{.*\\}|rails.*erb.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ERB injection"
     },
     "rails_active_record_injection": {
       "regex": "activerecord.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ActiveRecord injection"
     },
     "aspnet_viewstate_manipulation": {
       "regex": "viewstate.*\\$\\{.*\\}|__viewstate.*\\$\\{.*\\}|aspnet.*viewstate.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET ViewState manipulation"
     },
     "aspnet_form_authentication_bypass": {
       "regex": "forms.*authentication.*bypass|aspnet.*auth.*bypass|authentication.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET form authentication bypass"
     },
     "flask_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|flask.*template.*\\$\\{.*\\}|render_template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flask Jinja2 injection"
     },
     "fastapi_dependency_injection": {
       "regex": "fastapi.*dependency.*\\$\\{.*\\}|depends.*\\$\\{.*\\}|dependency.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "FastAPI dependency injection abuse"
     },
     "anti_debugging_isdebuggerpresent": {
       "regex": "isdebuggerpresent|checkremotedebuggerpresent|debugger.*present",
       "risk_level": "medium",
       "description": "Anti-debugging IsDebuggerPresent"
     },
     "anti_debugging_breakpoint_detection": {
       "regex": "breakpoint.*detection|debugger.*breakpoint|anti.*debug.*breakpoint",
       "risk_level": "medium",
       "description": "Anti-debugging breakpoint detection"
     },
     "anti_vm_virtualbox_detection": {
       "regex": "virtualbox.*detection|vbox.*detection|vmware.*detection",
       "risk_level": "medium",
       "description": "Anti-VM VirtualBox detection"
     },
     "anti_vm_sandbox_detection": {
       "regex": "sandbox.*detection|vm.*detection|virtual.*machine.*detection",
       "risk_level": "medium",
       "description": "Anti-VM sandbox detection"
     },
     "code_obfuscation_dead_code": {
       "regex": "dead.*code.*injection|obfuscate.*dead.*code|inject.*dead.*code",
       "risk_level": "medium",
       "description": "Code obfuscation dead code injection"
     },
     "code_obfuscation_string_encryption_variants": {
       "regex": "string.*encryption.*variant|obfuscate.*string.*variant|encrypt.*string.*variant",
       "risk_level": "medium",
       "description": "Code obfuscation string encryption variants"
     },
     "api_hooking_function_hooking_variants": {
       "regex": "hook.*function.*variant|api.*hooking.*variant|function.*hook.*variant",
       "risk_level": "high",
       "description": "API hooking function hooking variants"
     },
     "api_hooking_syscall_interception": {
       "regex": "syscall.*interception|intercept.*syscall|system.*call.*hook",
       "risk_level": "high",
       "description": "API hooking syscall interception"
     },
     "process_injection_thread_hijacking": {
       "regex": "thread.*hijacking|hijack.*thread|process.*thread.*injection",
       "risk_level": "critical",
       "description": "Process injection thread hijacking"
     },
     "process_injection_apc_injection": {
       "regex": "apc.*injection|asynchronous.*procedure.*call.*injection|apc.*hook",
       "risk_level": "critical",
       "description": "Process injection APC injection"
     },
     "memory_scanning_heap_spraying": {
       "regex": "heap.*spraying|memory.*heap.*spray|spray.*heap.*memory",
       "risk_level": "high",
       "description": "Memory scanning heap spraying"
     },
     "memory_scanning_stack_pivot": {
       "regex": "stack.*pivot|pivot.*stack|memory.*stack.*manipulation",
       "risk_level": "high",
       "description": "Memory scanning stack pivot"
     },
     "ssh_tunneling_socks_proxy": {
       "regex": "ssh.*-D.*\\d+|socks.*proxy.*ssh|ssh.*socks.*proxy",
       "risk_level": "medium",
       "description": "SSH tunneling SOCKS proxy"
     },
     "ssh_tunneling_dynamic_port_forwarding": {
       "regex": "ssh.*-D.*\\d+:.*:\\d+|dynamic.*port.*forwarding|ssh.*dynamic",
       "risk_level": "medium",
       "description": "SSH tunneling dynamic port forwarding"
     },
     "vpn_tunnel_manipulation": {
       "regex": "vpn.*tunnel.*manipulation|tunnel.*vpn.*manipulation|vpn.*manipulation",
       "risk_level": "medium",
       "description": "VPN tunnel manipulation"
     },
     "proxy_tunnel_manipulation": {
       "regex": "proxy.*tunnel.*manipulation|tunnel.*proxy.*manipulation|proxy.*manipulation",
       "risk_level": "medium",
       "description": "Proxy tunnel manipulation"
     },
     "port_scanning_syn_scan": {
       "regex": "nmap.*-sS.*\\d+|syn.*scan|tcp.*syn.*scan",
       "risk_level": "medium",
       "description": "Port scanning SYN scan"
     },
     "port_scanning_udp_scan": {
       "regex": "nmap.*-sU.*\\d+|udp.*scan|udp.*port.*scan",
       "risk_level": "medium",
       "description": "Port scanning UDP scan"
     },
     "network_reconnaissance_service_enumeration": {
       "regex": "service.*enumeration|network.*service.*scan|reconnaissance.*service",
       "risk_level": "medium",
       "description": "Network reconnaissance service enumeration"
     },
     "network_reconnaissance_os_fingerprinting": {
       "regex": "os.*fingerprinting|operating.*system.*detection|os.*detection",
       "risk_level": "medium",
       "description": "Network reconnaissance OS fingerprinting"
     },
     "session_hijacking_session_fixation": {
       "regex": "session.*fixation|fixation.*attack|session.*hijacking.*fixation",
       "risk_level": "high",
       "description": "Session hijacking session fixation"
     },
     "session_hijacking_session_prediction": {
       "regex": "session.*prediction|predict.*session|session.*hijacking.*prediction",
       "risk_level": "high",
       "description": "Session hijacking session prediction"
     },
     "clickjacking_frame_injection": {
       "regex": "frame.*injection|iframe.*injection|clickjacking.*frame",
       "risk_level": "medium",
       "description": "Clickjacking frame injection"
     },
     "clickjacking_overlay_attack": {
       "regex": "overlay.*attack|clickjacking.*overlay|ui.*redressing.*overlay",
       "risk_level": "medium",
       "description": "Clickjacking overlay attack"
     },
     "open_redirects_parameter_manipulation": {
       "regex": "redirect.*parameter.*\\$\\{.*\\}|url.*parameter.*redirect|redirect.*url.*parameter",
       "risk_level": "medium",
       "description": "Open redirects parameter manipulation"
     },
     "open_redirects_header_injection": {
       "regex": "redirect.*header.*\\$\\{.*\\}|header.*redirect|redirect.*header.*injection",
       "risk_level": "medium",
       "description": "Open redirects header injection"
     },
     "ssrf_internal_service_access": {
       "regex": "internal.*service.*access|ssrf.*internal|server.*side.*internal",
       "risk_level": "high",
       "description": "SSRF internal service access"
     },
     "ssrf_cloud_metadata_access": {
       "regex": "cloud.*metadata.*access|ssrf.*metadata|server.*side.*metadata",
       "risk_level": "high",
       "description": "SSRF cloud metadata access"
     },
     "xml_injection_xxe_injection": {
       "regex": "xxe.*injection|xml.*external.*entity|external.*entity.*injection",
       "risk_level": "high",
       "description": "XML injection XXE injection"
     },
     "xml_injection_xpath_injection": {
       "regex": "xpath.*injection|xml.*path.*injection|xpath.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "XML injection XPath injection"
     },
     "json_injection_jsonp_injection": {
       "regex": "jsonp.*injection|json.*with.*padding.*injection|jsonp.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "JSON injection JSONP injection"
     },
     "json_injection_json_schema_injection": {
       "regex": "json.*schema.*injection|schema.*injection|json.*schema.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "JSON injection JSON schema injection"
     },
     "graphql_introspection_abuse": {
       "regex": "graphql.*introspection.*abuse|introspection.*abuse|graphql.*introspection",
       "risk_level": "high",
       "description": "GraphQL introspection abuse"
     },
     "graphql_field_suggestion_abuse": {
       "regex": "graphql.*field.*suggestion.*abuse|field.*suggestion.*abuse|graphql.*suggestion",
       "risk_level": "high",
       "description": "GraphQL field suggestion abuse"
     },
     "android_root_detection_bypass_variants": {
       "regex": "root.*detection.*bypass.*variant|android.*root.*bypass.*variant|bypass.*root.*variant",
       "risk_level": "medium",
       "description": "Android root detection bypass variants"
     },
     "android_su_binary_detection": {
       "regex": "su.*binary.*detection|android.*su.*detection|root.*su.*detection",
       "risk_level": "medium",
       "description": "Android su binary detection"
     },
     "ios_jailbreak_detection_bypass_variants": {
       "regex": "jailbreak.*detection.*bypass.*variant|ios.*jailbreak.*bypass.*variant|bypass.*jailbreak.*variant",
       "risk_level": "medium",
       "description": "iOS jailbreak detection bypass variants"
     },
     "ios_sandbox_escape": {
       "regex": "sandbox.*escape|ios.*sandbox.*escape|jailbreak.*sandbox.*escape",
       "risk_level": "critical",
       "description": "iOS sandbox escape"
     },
     "react_native_native_module_injection": {
       "regex": "native.*module.*injection|react.*native.*module.*injection|module.*injection",
       "risk_level": "high",
       "description": "React Native native module injection"
     },
     "react_native_bridge_abuse_variants": {
       "regex": "bridge.*abuse.*variant|react.*native.*bridge.*variant|javascript.*bridge.*variant",
       "risk_level": "high",
       "description": "React Native bridge abuse variants"
     },
     "flutter_platform_channel_abuse": {
       "regex": "platform.*channel.*abuse|flutter.*channel.*abuse|channel.*abuse",
       "risk_level": "high",
       "description": "Flutter platform channel abuse"
     },
     "flutter_dart_code_injection_variants": {
       "regex": "dart.*code.*injection.*variant|flutter.*dart.*variant|dart.*injection.*variant",
       "risk_level": "high",
       "description": "Flutter Dart code injection variants"
     },
     "smart_home_automation_abuse": {
       "regex": "automation.*abuse|smart.*home.*automation.*abuse|home.*automation.*abuse",
       "risk_level": "medium",
       "description": "Smart home automation abuse"
     },
     "smart_home_device_control_bypass": {
       "regex": "device.*control.*bypass|smart.*home.*control.*bypass|home.*control.*bypass",
       "risk_level": "medium",
       "description": "Smart home device control bypass"
     },
     "industrial_iot_plc_programming": {
       "regex": "plc.*programming|industrial.*plc.*programming|programmable.*logic.*controller",
       "risk_level": "critical",
       "description": "Industrial IoT PLC programming"
     },
     "industrial_iot_hmi_manipulation": {
       "regex": "hmi.*manipulation|human.*machine.*interface.*manipulation|hmi.*attack",
       "risk_level": "critical",
       "description": "Industrial IoT HMI manipulation"
     },
     "medical_device_control_bypass": {
       "regex": "medical.*device.*control.*bypass|device.*control.*bypass|medical.*control.*bypass",
       "risk_level": "critical",
       "description": "Medical device control bypass"
     },
     "medical_device_patient_monitor_access": {
       "regex": "patient.*monitor.*access|medical.*monitor.*access|monitor.*access",
       "risk_level": "critical",
       "description": "Medical device patient monitor access"
     },
     "automotive_ecu_reprogramming": {
       "regex": "ecu.*reprogramming|engine.*control.*unit.*reprogramming|ecu.*attack",
       "risk_level": "critical",
       "description": "Automotive ECU reprogramming"
     },
     "automotive_obd_manipulation": {
       "regex": "obd.*manipulation|on.*board.*diagnostics.*manipulation|obd.*attack",
       "risk_level": "critical",
       "description": "Automotive OBD manipulation"
     },
     "wearable_device_synchronization_abuse": {
       "regex": "device.*synchronization.*abuse|wearable.*sync.*abuse|sync.*abuse",
       "risk_level": "medium",
       "description": "Wearable device synchronization abuse"
     },
     "wearable_health_data_exfiltration": {
       "regex": "health.*data.*exfiltration|wearable.*data.*exfiltration|health.*exfiltration",
       "risk_level": "medium",
       "description": "Wearable health data exfiltration"
     },
     "mining_malware_cryptojacking": {
       "regex": "cryptojacking|mining.*malware.*cryptojacking|crypto.*jacking",
       "risk_level": "high",
       "description": "Mining malware cryptojacking"
     },
     "mining_malware_mining_pool_hijacking": {
       "regex": "mining.*pool.*hijacking|pool.*hijacking|mining.*hijacking",
       "risk_level": "high",
       "description": "Mining malware mining pool hijacking"
     },
     "mining_pool_hash_rate_theft": {
       "regex": "hash.*rate.*theft|mining.*hash.*theft|pool.*hash.*theft",
       "risk_level": "high",
       "description": "Mining pool hash rate theft"
     },
     "wallet_theft_seed_phrase_extraction": {
       "regex": "seed.*phrase.*extraction|wallet.*seed.*extraction|seed.*extraction",
       "risk_level": "critical",
       "description": "Wallet theft seed phrase extraction"
     },
     "wallet_theft_private_key_bruteforce": {
       "regex": "private.*key.*bruteforce|wallet.*bruteforce|key.*bruteforce",
       "risk_level": "critical",
       "description": "Wallet theft private key bruteforce"
     },
     "blockchain_double_spending_attack": {
       "regex": "double.*spending.*attack|blockchain.*double.*spending|double.*spending",
       "risk_level": "critical",
       "description": "Blockchain double spending attack"
     },
     "blockchain_race_condition_attack": {
       "regex": "race.*condition.*attack|blockchain.*race.*condition|race.*condition",
       "risk_level": "critical",
       "description": "Blockchain race condition attack"
     },
     "defi_smart_contract_reentrancy": {
       "regex": "smart.*contract.*reentrancy|reentrancy.*attack|defi.*reentrancy",
       "risk_level": "high",
       "description": "DeFi smart contract reentrancy"
     },
     "defi_flash_loan_attack_variants": {
       "regex": "flash.*loan.*attack.*variant|defi.*flash.*variant|loan.*attack.*variant",
       "risk_level": "high",
       "description": "DeFi flash loan attack variants"
     },
     "nft_marketplace_abuse": {
       "regex": "marketplace.*abuse|nft.*marketplace.*abuse|marketplace.*attack",
       "risk_level": "medium",
       "description": "NFT marketplace abuse"
     },
     "nft_token_manipulation_variants": {
       "regex": "token.*manipulation.*variant|nft.*token.*variant|manipulation.*variant",
       "risk_level": "medium",
       "description": "NFT token manipulation variants"
     },
     "exchange_order_book_manipulation": {
       "regex": "order.*book.*manipulation|exchange.*order.*manipulation|book.*manipulation",
       "risk_level": "critical",
       "description": "Exchange order book manipulation"
     },
     "exchange_trading_bot_manipulation_variants": {
       "regex": "trading.*bot.*manipulation.*variant|exchange.*bot.*variant|bot.*manipulation.*variant",
       "risk_level": "critical",
       "description": "Exchange trading bot manipulation variants"
     },
     "phishing_email_spoofing_variants": {
       "regex": "email.*spoofing.*variant|phishing.*email.*variant|spoofing.*variant",
       "risk_level": "medium",
       "description": "Phishing email spoofing variants"
     },
     "spear_phishing_executive_impersonation": {
       "regex": "executive.*impersonation|spear.*phishing.*executive|impersonation.*executive",
       "risk_level": "high",
       "description": "Spear phishing executive impersonation"
     },
     "spear_phishing_targeted_attack_variants": {
       "regex": "targeted.*attack.*variant|spear.*phishing.*variant|targeted.*variant",
       "risk_level": "high",
       "description": "Spear phishing targeted attack variants"
     },
     "whaling_business_email_compromise": {
       "regex": "business.*email.*compromise|whaling.*business.*email|email.*compromise",
       "risk_level": "critical",
       "description": "Whaling business email compromise"
     },
     "whaling_ceo_fraud_variants": {
       "regex": "ceo.*fraud.*variant|whaling.*ceo.*variant|fraud.*variant",
       "risk_level": "critical",
       "description": "Whaling CEO fraud variants"
     },
     "smishing_text_scam": {
       "regex": "text.*scam|smishing.*text.*scam|sms.*scam",
       "risk_level": "medium",
       "description": "Smishing text scam"
     },
     "smishing_mobile_device_targeting": {
       "regex": "mobile.*device.*targeting|smishing.*mobile.*targeting|device.*targeting",
       "risk_level": "medium",
       "description": "Smishing mobile device targeting"
     },
     "pretexting_fake_identity": {
       "regex": "fake.*identity.*creation|pretexting.*fake.*identity|identity.*creation",
       "risk_level": "medium",
       "description": "Pretexting fake identity"
     },
     "pretexting_information_gathering": {
       "regex": "information.*gathering|pretexting.*information|gathering.*information",
       "risk_level": "medium",
       "description": "Pretexting information gathering"
     },
     "baiting_usb_drop_attack": {
       "regex": "usb.*drop.*attack|baiting.*usb.*drop|drop.*attack",
       "risk_level": "medium",
       "description": "Baiting USB drop attack"
     },
     "baiting_physical_device_placement": {
       "regex": "physical.*device.*placement|baiting.*physical.*device|device.*placement",
       "risk_level": "medium",
       "description": "Baiting physical device placement"
     },
     "quid_pro_quo_something_for_something": {
       "regex": "something.*for.*something|quid.*pro.*quo.*something|exchange.*manipulation",
       "risk_level": "medium",
       "description": "Quid pro quo something for something"
     },
     "quid_pro_quo_service_exchange_manipulation": {
       "regex": "service.*exchange.*manipulation|quid.*pro.*quo.*service|exchange.*manipulation",
       "risk_level": "medium",
       "description": "Quid pro quo service exchange manipulation"
     },
     "tailgating_piggybacking": {
       "regex": "piggybacking|tailgating.*piggybacking|door.*sneaking",
       "risk_level": "medium",
       "description": "Tailgating piggybacking"
     },
     "tailgating_door_manipulation": {
       "regex": "door.*manipulation|tailgating.*door.*manipulation|door.*sneaking",
       "risk_level": "medium",
       "description": "Tailgating door manipulation"
     },
     "docker_container_capabilities_abuse": {
       "regex": "docker.*run.*--cap-add.*SYS_PTRACE|docker.*run.*--cap-add.*SYS_ADMIN",
       "risk_level": "critical",
       "description": "Docker container capabilities abuse"
     },
     "docker_container_security_opts_bypass": {
       "regex": "docker.*run.*--security-opt.*no-new-privileges.*false|docker.*run.*--security-opt.*apparmor.*unconfined",
       "risk_level": "critical",
       "description": "Docker container security opts bypass"
     },
     "docker_container_device_access": {
       "regex": "docker.*run.*--device.*/dev/|docker.*run.*--privileged.*true",
       "risk_level": "critical",
       "description": "Docker container device access"
     },
     "kubernetes_pod_host_pid": {
       "regex": "hostPID.*true|hostPid.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod host PID"
     },
     "kubernetes_pod_host_ipc": {
       "regex": "hostIPC.*true|hostIpc.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod host IPC"
     },
     "kubernetes_pod_host_network": {
       "regex": "hostNetwork.*true|hostPort.*\\d+",
       "risk_level": "high",
       "description": "Kubernetes pod host network"
     },
     "aws_ec2_instance_metadata_access": {
       "regex": "curl.*169.254.169.254|wget.*169.254.169.254",
       "risk_level": "medium",
       "description": "AWS EC2 instance metadata access"
     },
     "aws_s3_bucket_policy_bypass": {
       "regex": "aws.*s3.*put-bucket-policy.*--policy.*\\$\\{.*\\}|s3.*bucket.*policy.*bypass",
       "risk_level": "high",
       "description": "AWS S3 bucket policy bypass"
     },
     "aws_iam_role_assumption": {
       "regex": "aws.*sts.*assume-role|aws.*iam.*assume-role|role.*assumption",
       "risk_level": "critical",
       "description": "AWS IAM role assumption"
     },
     "azure_vm_custom_script_extension": {
       "regex": "az.*vm.*extension.*set|az.*vm.*run-command",
       "risk_level": "high",
       "description": "Azure VM custom script extension"
     },
     "azure_key_vault_secret_access": {
       "regex": "az.*keyvault.*secret.*download|az.*keyvault.*certificate.*download",
       "risk_level": "critical",
       "description": "Azure Key Vault access"
     },
     "azure_storage_account_access": {
       "regex": "az.*storage.*account.*show-connection-string|az.*storage.*blob.*download",
       "risk_level": "high",
       "description": "Azure storage account access"
     },
     "gcp_compute_instance_metadata_access": {
       "regex": "curl.*metadata.google.internal|gcloud.*compute.*instances.*add-metadata",
       "risk_level": "medium",
       "description": "GCP compute instance metadata access"
     },
     "gcp_storage_bucket_access": {
       "regex": "gsutil.*cp.*gs://|gcloud.*storage.*buckets.*list",
       "risk_level": "high",
       "description": "GCP storage bucket access"
     },
     "terraform_backend_config_injection": {
       "regex": "terraform.*backend.*config.*\\$\\{.*\\}|backend.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform backend config injection"
     },
     "terraform_provider_config_injection": {
       "regex": "terraform.*provider.*config.*\\$\\{.*\\}|provider.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform provider config injection"
     },
     "ansible_vault_password": {
       "regex": "ansible-vault.*decrypt|ansible-vault.*view",
       "risk_level": "critical",
       "description": "Ansible vault password exposure"
     },
     "ansible_playbook_injection": {
       "regex": "ansible-playbook.*-e.*\\$\\{.*\\}|ansible-playbook.*--extra-vars.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ansible playbook injection"
     },
     "helm_chart_injection": {
       "regex": "helm.*install.*--set.*\\$\\{.*\\}|helm.*upgrade.*--set.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Helm chart injection"
     },
     "spring4shell_cve_2022_22965": {
       "regex": "class.*\\$\\{.*\\}|method.*\\$\\{.*\\}|field.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22965"
     },
     "spring4shell_cve_2022_22963": {
       "regex": "spring.*cloud.*function.*\\$\\{.*\\}|function.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22963"
     },
     "spring4shell_cve_2022_22950": {
       "regex": "spring.*cloud.*gateway.*\\$\\{.*\\}|gateway.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22950"
     },
     "log4shell_cve_2021_44228": {
       "regex": "\\$\\{jndi:ldap://|\\$\\{jndi:rmi://|\\$\\{jndi:dns://",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-44228"
     },
     "log4shell_cve_2021_45046": {
       "regex": "\\$\\{jndi:ldap://.*\\$\\{.*\\}|\\$\\{jndi:rmi://.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-45046"
     },
     "log4shell_cve_2021_45105": {
       "regex": "\\$\\{jndi:.*\\$\\{.*\\}.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-45105"
     },
     "proxyshell_cve_2021_34473": {
       "regex": "powershell.*-enc.*[A-Za-z0-9+/]{20,}|powershell.*-encodedcommand.*[A-Za-z0-9+/]{20,}",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-34473"
     },
     "proxyshell_cve_2021_34523": {
       "regex": "exchange.*powershell.*-enc|exchange.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-34523"
     },
     "proxyshell_cve_2021_31207": {
       "regex": "exchange.*autodiscover.*powershell|exchange.*ecp.*powershell",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-31207"
     },
     "proxylogon_cve_2021_26855": {
       "regex": "exchange.*autodiscover.*authentication.*bypass|exchange.*ecp.*authentication.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26855"
     },
     "proxylogon_cve_2021_26857": {
       "regex": "exchange.*autodiscover.*deserialization|exchange.*ecp.*deserialization",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26857"
     },
     "proxylogon_cve_2021_26858": {
       "regex": "exchange.*autodiscover.*post.*authentication|exchange.*ecp.*post.*authentication",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26858"
     },
     "zerologon_cve_2020_1472": {
       "regex": "netlogon.*privilege.*escalation|netlogon.*authentication.*bypass",
       "risk_level": "critical",
       "description": "ZeroLogon CVE-2020-1472"
     },
     "printnightmare_cve_2021_1675": {
       "regex": "spoolsv.*privilege.*escalation|print.*spooler.*exploit",
       "risk_level": "critical",
       "description": "PrintNightmare CVE-2021-1675"
     },
     "printnightmare_cve_2021_34527": {
       "regex": "windows.*print.*spooler.*rce|print.*spooler.*remote.*code.*execution",
       "risk_level": "critical",
       "description": "PrintNightmare CVE-2021-34527"
     },
     "eternalblue_ms17_010": {
       "regex": "smb.*eternalblue|ms17_010.*exploit|smb.*vulnerability.*exploitation",
       "risk_level": "critical",
       "description": "EternalBlue MS17-010"
     },
     "wannacry_ransomware": {
       "regex": "wannacry.*encrypt|wannacry.*ransomware|wannacry.*bitcoin.*address",
       "risk_level": "critical",
       "description": "WannaCry ransomware"
     },
     "notpetya_ransomware": {
       "regex": "notpetya.*encrypt|notpetya.*ransomware|notpetya.*mbr.*overwrite",
       "risk_level": "critical",
       "description": "NotPetya ransomware"
     },
     "ryuk_ransomware": {
       "regex": "ryuk.*encrypt|ryuk.*ransomware|ryuk.*bitcoin.*wallet",
       "risk_level": "critical",
       "description": "Ryuk ransomware"
     },
     "revil_ransomware": {
       "regex": "revil.*encrypt|revil.*ransomware|revil.*double.*extortion",
       "risk_level": "critical",
       "description": "REvil ransomware"
     },
     "heartbleed_cve_2014_0160": {
       "regex": "openssl.*heartbleed|heartbleed.*exploit|openssl.*vulnerability",
       "risk_level": "critical",
       "description": "Heartbleed CVE-2014-0160"
     },
     "shellshock_cve_2014_6271": {
       "regex": "bash.*shellshock|shellshock.*exploit|bash.*vulnerability",
       "risk_level": "critical",
       "description": "Shellshock CVE-2014-6271"
     },
     "struts_cve_2017_5638": {
       "regex": "struts.*cve.*2017.*5638|struts.*ognl.*injection|struts.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2017-5638"
     },
     "struts_cve_2017_9805": {
       "regex": "struts.*cve.*2017.*9805|struts.*rest.*plugin.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2017-9805"
     },
     "struts_cve_2018_11776": {
       "regex": "struts.*cve.*2018.*11776|struts.*namespace.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2018-11776"
     },
     "spring_expression_injection": {
       "regex": "spel.*\\$\\{.*\\}|spring.*expression.*\\$\\{.*\\}|@spel.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring expression injection"
     },
     "spring_ognl_injection": {
       "regex": "ognl.*\\$\\{.*\\}|@ognl.*\\$\\{.*\\}|spring.*ognl.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring OGNL injection"
     },
     "django_template_injection": {
       "regex": "django.*template.*\\$\\{.*\\}|jinja2.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django template injection"
     },
     "django_orm_injection": {
       "regex": "django.*orm.*\\$\\{.*\\}|queryset.*\\$\\{.*\\}|model.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django ORM injection"
     },
     "laravel_artisan_injection": {
       "regex": "artisan.*\\$\\{.*\\}|php.*artisan.*\\$\\{.*\\}|laravel.*command.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Artisan injection"
     },
     "laravel_eloquent_injection": {
       "regex": "eloquent.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Eloquent injection"
     },
     "express_route_injection": {
       "regex": "express.*route.*\\$\\{.*\\}|app\\.get.*\\$\\{.*\\}|app\\.post.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js route injection"
     },
     "express_middleware_bypass": {
       "regex": "express.*middleware.*bypass|app\\.use.*\\$\\{.*\\}|middleware.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js middleware bypass"
     },
     "rails_erb_injection": {
       "regex": "erb.*\\$\\{.*\\}|rails.*erb.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ERB injection"
     },
     "rails_active_record_injection": {
       "regex": "activerecord.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ActiveRecord injection"
     },
     "aspnet_viewstate_manipulation": {
       "regex": "viewstate.*\\$\\{.*\\}|__viewstate.*\\$\\{.*\\}|aspnet.*viewstate.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET ViewState manipulation"
     },
     "aspnet_form_authentication_bypass": {
       "regex": "forms.*authentication.*bypass|aspnet.*auth.*bypass|authentication.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET form authentication bypass"
     },
     "flask_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|flask.*template.*\\$\\{.*\\}|render_template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flask Jinja2 injection"
     },
     "fastapi_dependency_injection": {
       "regex": "fastapi.*dependency.*\\$\\{.*\\}|depends.*\\$\\{.*\\}|dependency.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "FastAPI dependency injection abuse"
     },
     "anti_debugging_detection": {
       "regex": "isdebuggerpresent|checkremotedebuggerpresent|debugger.*detection",
       "risk_level": "medium",
       "description": "Anti-debugging detection"
     },
     "anti_vm_detection": {
       "regex": "virtualbox|vmware|vbox|vm.*detection|sandbox.*detection",
       "risk_level": "medium",
       "description": "Anti-VM detection"
     },
     "code_obfuscation_string_encryption": {
       "regex": "string.*encryption|obfuscate.*string|encrypt.*string",
       "risk_level": "medium",
       "description": "Code obfuscation string encryption"
     },
     "code_obfuscation_variable_renaming": {
       "regex": "variable.*renaming|rename.*variable|obfuscate.*variable",
       "risk_level": "medium",
       "description": "Code obfuscation variable renaming"
     },
     "api_hooking_function_hooking": {
       "regex": "hook.*function|api.*hooking|function.*hook",
       "risk_level": "high",
       "description": "API hooking function hooking"
     },
     "api_hooking_system_call_interception": {
       "regex": "system.*call.*interception|syscall.*hook|intercept.*syscall",
       "risk_level": "high",
       "description": "API hooking system call interception"
     },
     "process_injection_dll_injection": {
       "regex": "dll.*injection|inject.*dll|loadlibrary.*injection",
       "risk_level": "critical",
       "description": "Process injection DLL injection"
     },
     "process_injection_code_cave_injection": {
       "regex": "code.*cave.*injection|cave.*injection|inject.*cave",
       "risk_level": "critical",
       "description": "Process injection code cave injection"
     },
     "memory_scanning_process_memory_manipulation": {
       "regex": "process.*memory.*manipulation|memory.*scanning|manipulate.*memory",
       "risk_level": "high",
       "description": "Memory scanning process memory manipulation"
     },
     "ssh_tunneling_port_forwarding": {
       "regex": "ssh.*-L.*\\d+:.*:\\d+|ssh.*-D.*\\d+|ssh.*tunnel",
       "risk_level": "medium",
       "description": "SSH tunneling port forwarding"
     },
     "ssh_tunneling_reverse_tunneling": {
       "regex": "ssh.*-R.*\\d+:.*:\\d+|reverse.*tunnel|ssh.*reverse",
       "risk_level": "medium",
       "description": "SSH tunneling reverse tunneling"
     },
     "vpn_proxy_abuse_tunnel_manipulation": {
       "regex": "vpn.*tunnel.*manipulation|proxy.*tunnel|tunnel.*manipulation",
       "risk_level": "medium",
       "description": "VPN/proxy abuse tunnel manipulation"
     },
     "port_scanning_network_reconnaissance": {
       "regex": "nmap.*-sS|nmap.*-sU|nmap.*-p.*\\d+",
       "risk_level": "medium",
       "description": "Port scanning network reconnaissance"
     },
     "network_reconnaissance_host_discovery": {
       "regex": "host.*discovery|network.*scanning|reconnaissance.*scan",
       "risk_level": "medium",
       "description": "Network reconnaissance host discovery"
     },
     "session_hijacking_cookie_manipulation": {
       "regex": "cookie.*manipulation|session.*hijacking|hijack.*session",
       "risk_level": "high",
       "description": "Session hijacking cookie manipulation"
     },
     "clickjacking_ui_redressing": {
       "regex": "ui.*redressing|clickjacking|frame.*injection",
       "risk_level": "medium",
       "description": "Clickjacking UI redressing"
     },
     "open_redirects_url_redirection_abuse": {
       "regex": "redirect.*\\$\\{.*\\}|url.*redirection.*\\$\\{.*\\}|redirect.*parameter",
       "risk_level": "medium",
       "description": "Open redirects URL redirection abuse"
     },
     "ssrf_server_side_request_forgery": {
       "regex": "ssrf.*\\$\\{.*\\}|server.*side.*request.*forgery|internal.*service.*access",
       "risk_level": "high",
       "description": "SSRF server-side request forgery"
     },
     "xml_injection_data_format_manipulation": {
       "regex": "xml.*\\$\\{.*\\}|xml.*injection|data.*format.*manipulation",
       "risk_level": "high",
       "description": "XML injection data format manipulation"
     },
     "json_injection_query_injection": {
       "regex": "json.*\\$\\{.*\\}|json.*injection|query.*injection",
       "risk_level": "high",
       "description": "JSON injection query injection"
     },
     "graphql_injection_query_injection": {
       "regex": "graphql.*\\$\\{.*\\}|graphql.*injection|query.*injection",
       "risk_level": "high",
       "description": "GraphQL injection query injection"
     },
     "android_bypass_root_detection_bypass": {
       "regex": "root.*detection.*bypass|android.*root.*bypass|bypass.*root.*detection",
       "risk_level": "medium",
       "description": "Android bypass root detection bypass"
     },
     "ios_bypass_jailbreak_detection_bypass": {
       "regex": "jailbreak.*detection.*bypass|ios.*jailbreak.*bypass|bypass.*jailbreak.*detection",
       "risk_level": "medium",
       "description": "iOS bypass jailbreak detection bypass"
     },
     "react_native_javascript_bridge_abuse": {
       "regex": "react.*native.*bridge.*abuse|javascript.*bridge.*\\$\\{.*\\}|native.*module.*injection",
       "risk_level": "high",
       "description": "React Native JavaScript bridge abuse"
     },
     "flutter_dart_code_injection": {
       "regex": "flutter.*dart.*injection|dart.*code.*\\$\\{.*\\}|platform.*channel.*abuse",
       "risk_level": "high",
       "description": "Flutter Dart code injection"
     },
     "smart_home_device_hijacking": {
       "regex": "smart.*home.*hijacking|device.*hijacking|automation.*abuse",
       "risk_level": "medium",
       "description": "Smart home device hijacking"
     },
     "industrial_iot_scada_manipulation": {
       "regex": "scada.*manipulation|plc.*programming|industrial.*iot.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Industrial IoT SCADA manipulation"
     },
     "medical_device_patient_data_access": {
       "regex": "medical.*device.*data.*access|patient.*data.*\\$\\{.*\\}|device.*control.*bypass",
       "risk_level": "critical",
       "description": "Medical device patient data access"
     },
     "automotive_can_bus_manipulation": {
       "regex": "can.*bus.*manipulation|ecu.*reprogramming|automotive.*security.*bypass",
       "risk_level": "critical",
       "description": "Automotive CAN bus manipulation"
     },
     "wearable_health_data_access": {
       "regex": "wearable.*health.*data.*access|device.*synchronization.*abuse|health.*data.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Wearable health data access"
     },
     "mining_malware_coinhive": {
       "regex": "coinhive.*mining|coinhive.*script|mining.*malware.*coinhive",
       "risk_level": "high",
       "description": "Mining malware Coinhive"
     },
     "mining_malware_xmrig": {
       "regex": "xmrig.*mining|xmrig.*malware|mining.*malware.*xmrig",
       "risk_level": "high",
       "description": "Mining malware XMRig"
     },
     "mining_pool_manipulation": {
       "regex": "mining.*pool.*manipulation|pool.*hijacking|hash.*rate.*theft",
       "risk_level": "high",
       "description": "Mining pool manipulation"
     },
     "wallet_theft_private_key_extraction": {
       "regex": "private.*key.*extraction|wallet.*theft|wallet\\.dat.*access",
       "risk_level": "critical",
       "description": "Wallet theft private key extraction"
     },
     "blockchain_51_attack": {
       "regex": "51.*attack|blockchain.*attack|double.*spending.*attempt",
       "risk_level": "critical",
       "description": "Blockchain 51% attack"
     },
     "defi_flash_loan_attack": {
       "regex": "flash.*loan.*attack|defi.*exploit|smart.*contract.*manipulation",
       "risk_level": "high",
       "description": "DeFi flash loan attack"
     },
     "nft_token_manipulation": {
       "regex": "nft.*token.*manipulation|marketplace.*abuse|token.*manipulation",
       "risk_level": "medium",
       "description": "NFT token manipulation"
     },
     "exchange_trading_bot_manipulation": {
       "regex": "trading.*bot.*manipulation|order.*book.*abuse|exchange.*attack",
       "risk_level": "critical",
       "description": "Exchange trading bot manipulation"
     },
     "docker_container_privilege_escalation": {
       "regex": "docker.*run.*--cap-add.*SYS_ADMIN|docker.*run.*--cap-add.*NET_ADMIN",
       "risk_level": "critical",
       "description": "Docker container privilege escalation"
     },
     "docker_container_resource_abuse": {
       "regex": "docker.*run.*--memory.*0|docker.*run.*--cpus.*0",
       "risk_level": "high",
       "description": "Docker container resource abuse"
     },
     "kubernetes_pod_security_context_bypass": {
       "regex": "runAsUser.*0|runAsGroup.*0|fsGroup.*0",
       "risk_level": "critical",
       "description": "Kubernetes pod security context bypass"
     },
     "kubernetes_pod_privilege_escalation": {
       "regex": "allowPrivilegeEscalation.*true|privileged.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod privilege escalation"
     },
     "aws_cloudformation_template_injection": {
       "regex": "cloudformation.*template.*\\$\\{.*\\}|cfn.*template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "AWS CloudFormation template injection"
     },
     "aws_lambda_function_injection": {
       "regex": "lambda.*function.*\\$\\{.*\\}|aws.*lambda.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "AWS Lambda function injection"
     },
     "azure_arm_template_injection": {
       "regex": "arm.*template.*\\$\\{.*\\}|azure.*template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Azure ARM template injection"
     },
     "azure_function_app_injection": {
       "regex": "function.*app.*\\$\\{.*\\}|azure.*function.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Azure Function App injection"
     },
     "gcp_cloud_function_injection": {
       "regex": "cloud.*function.*\\$\\{.*\\}|gcp.*function.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "GCP Cloud Function injection"
     },
     "terraform_remote_state_manipulation": {
       "regex": "terraform.*remote.*state.*\\$\\{.*\\}|backend.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform remote state manipulation"
     },
     "ansible_vault_password_file": {
       "regex": "ansible-vault.*--vault-password-file|--vault-password-file.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Ansible vault password file exposure"
     },
     "helm_secret_injection": {
       "regex": "helm.*secret.*\\$\\{.*\\}|--set.*secret.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Helm secret injection"
     },
     "spring_cloud_function_injection": {
       "regex": "spring.*cloud.*function.*\\$\\{.*\\}|function.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring Cloud Function injection"
     },
     "spring_cloud_gateway_injection": {
       "regex": "spring.*cloud.*gateway.*\\$\\{.*\\}|gateway.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring Cloud Gateway injection"
     },
     "log4j_jndi_injection_variants": {
       "regex": "\\$\\{jndi:ldaps://|\\$\\{jndi:corba://|\\$\\{jndi:iiop://",
       "risk_level": "critical",
       "description": "Log4j JNDI injection variants"
     },
     "log4j_lookup_injection": {
       "regex": "\\$\\{java:runtime|\\$\\{java:vm|\\$\\{java:os",
       "risk_level": "critical",
       "description": "Log4j lookup injection"
     },
     "proxyshell_exchange_autodiscover": {
       "regex": "autodiscover.*powershell.*-enc|autodiscover.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell Exchange Autodiscover"
     },
     "proxyshell_exchange_ecp": {
       "regex": "ecp.*powershell.*-enc|ecp.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell Exchange ECP"
     },
     "proxylogon_exchange_autodiscover_auth": {
       "regex": "autodiscover.*authentication.*bypass|autodiscover.*auth.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon Exchange Autodiscover authentication bypass"
     },
     "proxylogon_exchange_ecp_auth": {
       "regex": "ecp.*authentication.*bypass|ecp.*auth.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon Exchange ECP authentication bypass"
     },
     "zerologon_netlogon_privilege_escalation": {
       "regex": "netlogon.*privilege.*escalation|netlogon.*auth.*bypass",
       "risk_level": "critical",
       "description": "ZeroLogon Netlogon privilege escalation"
     },
     "printnightmare_spoolsv_exploit": {
       "regex": "spoolsv.*exploit|print.*spooler.*rce|spooler.*vulnerability",
       "risk_level": "critical",
       "description": "PrintNightmare spoolsv exploit"
     },
     "eternalblue_smb_exploit": {
       "regex": "smb.*eternalblue|ms17_010.*smb|smb.*vulnerability",
       "risk_level": "critical",
       "description": "EternalBlue SMB exploit"
     },
     "wannacry_encryption": {
       "regex": "wannacry.*encrypt|wannacry.*encryption|wannacry.*ransomware",
       "risk_level": "critical",
       "description": "WannaCry encryption"
     },
     "notpetya_mbr_overwrite": {
       "regex": "notpetya.*mbr.*overwrite|notpetya.*boot.*sector|notpetya.*encryption",
       "risk_level": "critical",
       "description": "NotPetya MBR overwrite"
     },
     "ryuk_encryption": {
       "regex": "ryuk.*encrypt|ryuk.*encryption|ryuk.*bitcoin.*wallet",
       "risk_level": "critical",
       "description": "Ryuk encryption"
     },
     "revil_double_extortion": {
       "regex": "revil.*double.*extortion|revil.*encrypt|revil.*ransomware",
       "risk_level": "critical",
       "description": "REvil double extortion"
     },
     "heartbleed_openssl_vulnerability": {
       "regex": "openssl.*heartbleed|heartbleed.*openssl|openssl.*vulnerability",
       "risk_level": "critical",
       "description": "Heartbleed OpenSSL vulnerability"
     },
     "shellshock_bash_vulnerability": {
       "regex": "bash.*shellshock|shellshock.*bash|bash.*vulnerability",
       "risk_level": "critical",
       "description": "Shellshock Bash vulnerability"
     },
     "struts_ognl_injection": {
       "regex": "struts.*ognl.*injection|ognl.*struts|struts.*vulnerability",
       "risk_level": "critical",
       "description": "Struts OGNL injection"
     },
     "struts_rest_plugin_vulnerability": {
       "regex": "struts.*rest.*plugin.*vulnerability|rest.*plugin.*struts",
       "risk_level": "critical",
       "description": "Struts REST plugin vulnerability"
     },
     "struts_namespace_vulnerability": {
       "regex": "struts.*namespace.*vulnerability|namespace.*struts",
       "risk_level": "critical",
       "description": "Struts namespace vulnerability"
     },
     "spring_spel_injection": {
       "regex": "spel.*\\$\\{.*\\}|spring.*spel.*\\$\\{.*\\}|@spel.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring SpEL injection"
     },
     "spring_ognl_injection_variants": {
       "regex": "ognl.*\\$\\{.*\\}|@ognl.*\\$\\{.*\\}|spring.*ognl.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring OGNL injection variants"
     },
     "django_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|django.*jinja2.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django Jinja2 injection"
     },
     "django_orm_injection": {
       "regex": "django.*orm.*\\$\\{.*\\}|queryset.*\\$\\{.*\\}|model.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django ORM injection"
     },
     "laravel_artisan_injection": {
       "regex": "artisan.*\\$\\{.*\\}|php.*artisan.*\\$\\{.*\\}|laravel.*command.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Artisan injection"
     },
     "laravel_eloquent_injection": {
       "regex": "eloquent.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Eloquent injection"
     },
     "express_route_injection": {
       "regex": "express.*route.*\\$\\{.*\\}|app\\.get.*\\$\\{.*\\}|app\\.post.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js route injection"
     },
     "express_middleware_bypass": {
       "regex": "express.*middleware.*bypass|app\\.use.*\\$\\{.*\\}|middleware.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js middleware bypass"
     },
     "rails_erb_injection": {
       "regex": "erb.*\\$\\{.*\\}|rails.*erb.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ERB injection"
     },
     "rails_active_record_injection": {
       "regex": "activerecord.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ActiveRecord injection"
     },
     "aspnet_viewstate_manipulation": {
       "regex": "viewstate.*\\$\\{.*\\}|__viewstate.*\\$\\{.*\\}|aspnet.*viewstate.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET ViewState manipulation"
     },
     "aspnet_form_authentication_bypass": {
       "regex": "forms.*authentication.*bypass|aspnet.*auth.*bypass|authentication.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET form authentication bypass"
     },
     "flask_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|flask.*template.*\\$\\{.*\\}|render_template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flask Jinja2 injection"
     },
     "fastapi_dependency_injection": {
       "regex": "fastapi.*dependency.*\\$\\{.*\\}|depends.*\\$\\{.*\\}|dependency.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "FastAPI dependency injection abuse"
     },
     "anti_debugging_isdebuggerpresent": {
       "regex": "isdebuggerpresent|checkremotedebuggerpresent|debugger.*present",
       "risk_level": "medium",
       "description": "Anti-debugging IsDebuggerPresent"
     },
     "anti_debugging_breakpoint_detection": {
       "regex": "breakpoint.*detection|debugger.*breakpoint|anti.*debug.*breakpoint",
       "risk_level": "medium",
       "description": "Anti-debugging breakpoint detection"
     },
     "anti_vm_virtualbox_detection": {
       "regex": "virtualbox.*detection|vbox.*detection|vmware.*detection",
       "risk_level": "medium",
       "description": "Anti-VM VirtualBox detection"
     },
     "anti_vm_sandbox_detection": {
       "regex": "sandbox.*detection|vm.*detection|virtual.*machine.*detection",
       "risk_level": "medium",
       "description": "Anti-VM sandbox detection"
     },
     "code_obfuscation_dead_code": {
       "regex": "dead.*code.*injection|obfuscate.*dead.*code|inject.*dead.*code",
       "risk_level": "medium",
       "description": "Code obfuscation dead code injection"
     },
     "code_obfuscation_string_encryption_variants": {
       "regex": "string.*encryption.*variant|obfuscate.*string.*variant|encrypt.*string.*variant",
       "risk_level": "medium",
       "description": "Code obfuscation string encryption variants"
     },
     "api_hooking_function_hooking_variants": {
       "regex": "hook.*function.*variant|api.*hooking.*variant|function.*hook.*variant",
       "risk_level": "high",
       "description": "API hooking function hooking variants"
     },
     "api_hooking_syscall_interception": {
       "regex": "syscall.*interception|intercept.*syscall|system.*call.*hook",
       "risk_level": "high",
       "description": "API hooking syscall interception"
     },
     "process_injection_thread_hijacking": {
       "regex": "thread.*hijacking|hijack.*thread|process.*thread.*injection",
       "risk_level": "critical",
       "description": "Process injection thread hijacking"
     },
     "process_injection_apc_injection": {
       "regex": "apc.*injection|asynchronous.*procedure.*call.*injection|apc.*hook",
       "risk_level": "critical",
       "description": "Process injection APC injection"
     },
     "memory_scanning_heap_spraying": {
       "regex": "heap.*spraying|memory.*heap.*spray|spray.*heap.*memory",
       "risk_level": "high",
       "description": "Memory scanning heap spraying"
     },
     "memory_scanning_stack_pivot": {
       "regex": "stack.*pivot|pivot.*stack|memory.*stack.*manipulation",
       "risk_level": "high",
       "description": "Memory scanning stack pivot"
     },
     "ssh_tunneling_socks_proxy": {
       "regex": "ssh.*-D.*\\d+|socks.*proxy.*ssh|ssh.*socks.*proxy",
       "risk_level": "medium",
       "description": "SSH tunneling SOCKS proxy"
     },
     "ssh_tunneling_dynamic_port_forwarding": {
       "regex": "ssh.*-D.*\\d+:.*:\\d+|dynamic.*port.*forwarding|ssh.*dynamic",
       "risk_level": "medium",
       "description": "SSH tunneling dynamic port forwarding"
     },
     "vpn_tunnel_manipulation": {
       "regex": "vpn.*tunnel.*manipulation|tunnel.*vpn.*manipulation|vpn.*manipulation",
       "risk_level": "medium",
       "description": "VPN tunnel manipulation"
     },
     "proxy_tunnel_manipulation": {
       "regex": "proxy.*tunnel.*manipulation|tunnel.*proxy.*manipulation|proxy.*manipulation",
       "risk_level": "medium",
       "description": "Proxy tunnel manipulation"
     },
     "port_scanning_syn_scan": {
       "regex": "nmap.*-sS.*\\d+|syn.*scan|tcp.*syn.*scan",
       "risk_level": "medium",
       "description": "Port scanning SYN scan"
     },
     "port_scanning_udp_scan": {
       "regex": "nmap.*-sU.*\\d+|udp.*scan|udp.*port.*scan",
       "risk_level": "medium",
       "description": "Port scanning UDP scan"
     },
     "network_reconnaissance_service_enumeration": {
       "regex": "service.*enumeration|network.*service.*scan|reconnaissance.*service",
       "risk_level": "medium",
       "description": "Network reconnaissance service enumeration"
     },
     "network_reconnaissance_os_fingerprinting": {
       "regex": "os.*fingerprinting|operating.*system.*detection|os.*detection",
       "risk_level": "medium",
       "description": "Network reconnaissance OS fingerprinting"
     },
     "session_hijacking_session_fixation": {
       "regex": "session.*fixation|fixation.*attack|session.*hijacking.*fixation",
       "risk_level": "high",
       "description": "Session hijacking session fixation"
     },
     "session_hijacking_session_prediction": {
       "regex": "session.*prediction|predict.*session|session.*hijacking.*prediction",
       "risk_level": "high",
       "description": "Session hijacking session prediction"
     },
     "clickjacking_frame_injection": {
       "regex": "frame.*injection|iframe.*injection|clickjacking.*frame",
       "risk_level": "medium",
       "description": "Clickjacking frame injection"
     },
     "clickjacking_overlay_attack": {
       "regex": "overlay.*attack|clickjacking.*overlay|ui.*redressing.*overlay",
       "risk_level": "medium",
       "description": "Clickjacking overlay attack"
     },
     "open_redirects_parameter_manipulation": {
       "regex": "redirect.*parameter.*\\$\\{.*\\}|url.*parameter.*redirect|redirect.*url.*parameter",
       "risk_level": "medium",
       "description": "Open redirects parameter manipulation"
     },
     "open_redirects_header_injection": {
       "regex": "redirect.*header.*\\$\\{.*\\}|header.*redirect|redirect.*header.*injection",
       "risk_level": "medium",
       "description": "Open redirects header injection"
     },
     "ssrf_internal_service_access": {
       "regex": "internal.*service.*access|ssrf.*internal|server.*side.*internal",
       "risk_level": "high",
       "description": "SSRF internal service access"
     },
     "ssrf_cloud_metadata_access": {
       "regex": "cloud.*metadata.*access|ssrf.*metadata|server.*side.*metadata",
       "risk_level": "high",
       "description": "SSRF cloud metadata access"
     },
     "xml_injection_xxe_injection": {
       "regex": "xxe.*injection|xml.*external.*entity|external.*entity.*injection",
       "risk_level": "high",
       "description": "XML injection XXE injection"
     },
     "xml_injection_xpath_injection": {
       "regex": "xpath.*injection|xml.*path.*injection|xpath.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "XML injection XPath injection"
     },
     "json_injection_jsonp_injection": {
       "regex": "jsonp.*injection|json.*with.*padding.*injection|jsonp.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "JSON injection JSONP injection"
     },
     "json_injection_json_schema_injection": {
       "regex": "json.*schema.*injection|schema.*injection|json.*schema.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "JSON injection JSON schema injection"
     },
     "graphql_introspection_abuse": {
       "regex": "graphql.*introspection.*abuse|introspection.*abuse|graphql.*introspection",
       "risk_level": "high",
       "description": "GraphQL introspection abuse"
     },
     "graphql_field_suggestion_abuse": {
       "regex": "graphql.*field.*suggestion.*abuse|field.*suggestion.*abuse|graphql.*suggestion",
       "risk_level": "high",
       "description": "GraphQL field suggestion abuse"
     },
     "android_root_detection_bypass_variants": {
       "regex": "root.*detection.*bypass.*variant|android.*root.*bypass.*variant|bypass.*root.*variant",
       "risk_level": "medium",
       "description": "Android root detection bypass variants"
     },
     "android_su_binary_detection": {
       "regex": "su.*binary.*detection|android.*su.*detection|root.*su.*detection",
       "risk_level": "medium",
       "description": "Android su binary detection"
     },
     "ios_jailbreak_detection_bypass_variants": {
       "regex": "jailbreak.*detection.*bypass.*variant|ios.*jailbreak.*bypass.*variant|bypass.*jailbreak.*variant",
       "risk_level": "medium",
       "description": "iOS jailbreak detection bypass variants"
     },
     "ios_sandbox_escape": {
       "regex": "sandbox.*escape|ios.*sandbox.*escape|jailbreak.*sandbox.*escape",
       "risk_level": "critical",
       "description": "iOS sandbox escape"
     },
     "react_native_native_module_injection": {
       "regex": "native.*module.*injection|react.*native.*module.*injection|module.*injection",
       "risk_level": "high",
       "description": "React Native native module injection"
     },
     "react_native_bridge_abuse_variants": {
       "regex": "bridge.*abuse.*variant|react.*native.*bridge.*variant|javascript.*bridge.*variant",
       "risk_level": "high",
       "description": "React Native bridge abuse variants"
     },
     "flutter_platform_channel_abuse": {
       "regex": "platform.*channel.*abuse|flutter.*channel.*abuse|channel.*abuse",
       "risk_level": "high",
       "description": "Flutter platform channel abuse"
     },
     "flutter_dart_code_injection_variants": {
       "regex": "dart.*code.*injection.*variant|flutter.*dart.*variant|dart.*injection.*variant",
       "risk_level": "high",
       "description": "Flutter Dart code injection variants"
     },
     "smart_home_automation_abuse": {
       "regex": "automation.*abuse|smart.*home.*automation.*abuse|home.*automation.*abuse",
       "risk_level": "medium",
       "description": "Smart home automation abuse"
     },
     "smart_home_device_control_bypass": {
       "regex": "device.*control.*bypass|smart.*home.*control.*bypass|home.*control.*bypass",
       "risk_level": "medium",
       "description": "Smart home device control bypass"
     },
     "industrial_iot_plc_programming": {
       "regex": "plc.*programming|industrial.*plc.*programming|programmable.*logic.*controller",
       "risk_level": "critical",
       "description": "Industrial IoT PLC programming"
     },
     "industrial_iot_hmi_manipulation": {
       "regex": "hmi.*manipulation|human.*machine.*interface.*manipulation|hmi.*attack",
       "risk_level": "critical",
       "description": "Industrial IoT HMI manipulation"
     },
     "medical_device_control_bypass": {
       "regex": "medical.*device.*control.*bypass|device.*control.*bypass|medical.*control.*bypass",
       "risk_level": "critical",
       "description": "Medical device control bypass"
     },
     "medical_device_patient_monitor_access": {
       "regex": "patient.*monitor.*access|medical.*monitor.*access|monitor.*access",
       "risk_level": "critical",
       "description": "Medical device patient monitor access"
     },
     "automotive_ecu_reprogramming": {
       "regex": "ecu.*reprogramming|engine.*control.*unit.*reprogramming|ecu.*attack",
       "risk_level": "critical",
       "description": "Automotive ECU reprogramming"
     },
     "automotive_obd_manipulation": {
       "regex": "obd.*manipulation|on.*board.*diagnostics.*manipulation|obd.*attack",
       "risk_level": "critical",
       "description": "Automotive OBD manipulation"
     },
     "wearable_device_synchronization_abuse": {
       "regex": "device.*synchronization.*abuse|wearable.*sync.*abuse|sync.*abuse",
       "risk_level": "medium",
       "description": "Wearable device synchronization abuse"
     },
     "wearable_health_data_exfiltration": {
       "regex": "health.*data.*exfiltration|wearable.*data.*exfiltration|health.*exfiltration",
       "risk_level": "medium",
       "description": "Wearable health data exfiltration"
     },
     "mining_malware_cryptojacking": {
       "regex": "cryptojacking|mining.*malware.*cryptojacking|crypto.*jacking",
       "risk_level": "high",
       "description": "Mining malware cryptojacking"
     },
     "mining_malware_mining_pool_hijacking": {
       "regex": "mining.*pool.*hijacking|pool.*hijacking|mining.*hijacking",
       "risk_level": "high",
       "description": "Mining malware mining pool hijacking"
     },
     "mining_pool_hash_rate_theft": {
       "regex": "hash.*rate.*theft|mining.*hash.*theft|pool.*hash.*theft",
       "risk_level": "high",
       "description": "Mining pool hash rate theft"
     },
     "wallet_theft_seed_phrase_extraction": {
       "regex": "seed.*phrase.*extraction|wallet.*seed.*extraction|seed.*extraction",
       "risk_level": "critical",
       "description": "Wallet theft seed phrase extraction"
     },
     "wallet_theft_private_key_bruteforce": {
       "regex": "private.*key.*bruteforce|wallet.*bruteforce|key.*bruteforce",
       "risk_level": "critical",
       "description": "Wallet theft private key bruteforce"
     },
     "blockchain_double_spending_attack": {
       "regex": "double.*spending.*attack|blockchain.*double.*spending|double.*spending",
       "risk_level": "critical",
       "description": "Blockchain double spending attack"
     },
     "blockchain_race_condition_attack": {
       "regex": "race.*condition.*attack|blockchain.*race.*condition|race.*condition",
       "risk_level": "critical",
       "description": "Blockchain race condition attack"
     },
     "defi_smart_contract_reentrancy": {
       "regex": "smart.*contract.*reentrancy|reentrancy.*attack|defi.*reentrancy",
       "risk_level": "high",
       "description": "DeFi smart contract reentrancy"
     },
     "defi_flash_loan_attack_variants": {
       "regex": "flash.*loan.*attack.*variant|defi.*flash.*variant|loan.*attack.*variant",
       "risk_level": "high",
       "description": "DeFi flash loan attack variants"
     },
     "nft_marketplace_abuse": {
       "regex": "marketplace.*abuse|nft.*marketplace.*abuse|marketplace.*attack",
       "risk_level": "medium",
       "description": "NFT marketplace abuse"
     },
     "nft_token_manipulation_variants": {
       "regex": "token.*manipulation.*variant|nft.*token.*variant|manipulation.*variant",
       "risk_level": "medium",
       "description": "NFT token manipulation variants"
     },
     "exchange_order_book_manipulation": {
       "regex": "order.*book.*manipulation|exchange.*order.*manipulation|book.*manipulation",
       "risk_level": "critical",
       "description": "Exchange order book manipulation"
     },
     "exchange_trading_bot_manipulation_variants": {
       "regex": "trading.*bot.*manipulation.*variant|exchange.*bot.*variant|bot.*manipulation.*variant",
       "risk_level": "critical",
       "description": "Exchange trading bot manipulation variants"
     },
     "phishing_email_spoofing_variants": {
       "regex": "email.*spoofing.*variant|phishing.*email.*variant|spoofing.*variant",
       "risk_level": "medium",
       "description": "Phishing email spoofing variants"
     },
     "spear_phishing_executive_impersonation": {
       "regex": "executive.*impersonation|spear.*phishing.*executive|impersonation.*executive",
       "risk_level": "high",
       "description": "Spear phishing executive impersonation"
     },
     "spear_phishing_targeted_attack_variants": {
       "regex": "targeted.*attack.*variant|spear.*phishing.*variant|targeted.*variant",
       "risk_level": "high",
       "description": "Spear phishing targeted attack variants"
     },
     "whaling_business_email_compromise": {
       "regex": "business.*email.*compromise|whaling.*business.*email|email.*compromise",
       "risk_level": "critical",
       "description": "Whaling business email compromise"
     },
     "whaling_ceo_fraud_variants": {
       "regex": "ceo.*fraud.*variant|whaling.*ceo.*variant|fraud.*variant",
       "risk_level": "critical",
       "description": "Whaling CEO fraud variants"
     },
     "smishing_text_scam": {
       "regex": "text.*scam|smishing.*text.*scam|sms.*scam",
       "risk_level": "medium",
       "description": "Smishing text scam"
     },
     "smishing_mobile_device_targeting": {
       "regex": "mobile.*device.*targeting|smishing.*mobile.*targeting|device.*targeting",
       "risk_level": "medium",
       "description": "Smishing mobile device targeting"
     },
     "pretexting_fake_identity": {
       "regex": "fake.*identity.*creation|pretexting.*fake.*identity|identity.*creation",
       "risk_level": "medium",
       "description": "Pretexting fake identity"
     },
     "pretexting_information_gathering": {
       "regex": "information.*gathering|pretexting.*information|gathering.*information",
       "risk_level": "medium",
       "description": "Pretexting information gathering"
     },
     "baiting_usb_drop_attack": {
       "regex": "usb.*drop.*attack|baiting.*usb.*drop|drop.*attack",
       "risk_level": "medium",
       "description": "Baiting USB drop attack"
     },
     "baiting_physical_device_placement": {
       "regex": "physical.*device.*placement|baiting.*physical.*device|device.*placement",
       "risk_level": "medium",
       "description": "Baiting physical device placement"
     },
     "quid_pro_quo_something_for_something": {
       "regex": "something.*for.*something|quid.*pro.*quo.*something|exchange.*manipulation",
       "risk_level": "medium",
       "description": "Quid pro quo something for something"
     },
     "quid_pro_quo_service_exchange_manipulation": {
       "regex": "service.*exchange.*manipulation|quid.*pro.*quo.*service|exchange.*manipulation",
       "risk_level": "medium",
       "description": "Quid pro quo service exchange manipulation"
     },
     "tailgating_piggybacking": {
       "regex": "piggybacking|tailgating.*piggybacking|door.*sneaking",
       "risk_level": "medium",
       "description": "Tailgating piggybacking"
     },
     "tailgating_door_manipulation": {
       "regex": "door.*manipulation|tailgating.*door.*manipulation|door.*sneaking",
       "risk_level": "medium",
       "description": "Tailgating door manipulation"
     },
     "docker_container_capabilities_abuse": {
       "regex": "docker.*run.*--cap-add.*SYS_PTRACE|docker.*run.*--cap-add.*SYS_ADMIN",
       "risk_level": "critical",
       "description": "Docker container capabilities abuse"
     },
     "docker_container_security_opts_bypass": {
       "regex": "docker.*run.*--security-opt.*no-new-privileges.*false|docker.*run.*--security-opt.*apparmor.*unconfined",
       "risk_level": "critical",
       "description": "Docker container security opts bypass"
     },
     "docker_container_device_access": {
       "regex": "docker.*run.*--device.*/dev/|docker.*run.*--privileged.*true",
       "risk_level": "critical",
       "description": "Docker container device access"
     },
     "kubernetes_pod_host_pid": {
       "regex": "hostPID.*true|hostPid.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod host PID"
     },
     "kubernetes_pod_host_ipc": {
       "regex": "hostIPC.*true|hostIpc.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod host IPC"
     },
     "kubernetes_pod_host_network": {
       "regex": "hostNetwork.*true|hostPort.*\\d+",
       "risk_level": "high",
       "description": "Kubernetes pod host network"
     },
     "aws_ec2_instance_metadata_access": {
       "regex": "curl.*169.254.169.254|wget.*169.254.169.254",
       "risk_level": "medium",
       "description": "AWS EC2 instance metadata access"
     },
     "aws_s3_bucket_policy_bypass": {
       "regex": "aws.*s3.*put-bucket-policy.*--policy.*\\$\\{.*\\}|s3.*bucket.*policy.*bypass",
       "risk_level": "high",
       "description": "AWS S3 bucket policy bypass"
     },
     "aws_iam_role_assumption": {
       "regex": "aws.*sts.*assume-role|aws.*iam.*assume-role|role.*assumption",
       "risk_level": "critical",
       "description": "AWS IAM role assumption"
     },
     "azure_vm_custom_script_extension": {
       "regex": "az.*vm.*extension.*set.*--publisher.*Microsoft.Azure.Extensions.*--name.*CustomScript",
       "risk_level": "high",
       "description": "Azure VM custom script extension"
     },
     "azure_key_vault_secret_access": {
       "regex": "az.*keyvault.*secret.*download|az.*keyvault.*certificate.*download",
       "risk_level": "critical",
       "description": "Azure Key Vault access"
     },
     "azure_storage_account_access": {
       "regex": "az.*storage.*account.*show-connection-string|az.*storage.*blob.*download",
       "risk_level": "high",
       "description": "Azure storage account access"
     },
     "gcp_compute_instance_metadata_access": {
       "regex": "curl.*metadata.google.internal|gcloud.*compute.*instances.*add-metadata",
       "risk_level": "medium",
       "description": "GCP compute instance metadata access"
     },
     "gcp_storage_bucket_access": {
       "regex": "gsutil.*cp.*gs://|gcloud.*storage.*buckets.*list",
       "risk_level": "high",
       "description": "GCP storage bucket access"
     },
     "terraform_backend_config_injection": {
       "regex": "terraform.*backend.*config.*\\$\\{.*\\}|backend.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform backend config injection"
     },
     "terraform_provider_config_injection": {
       "regex": "terraform.*provider.*config.*\\$\\{.*\\}|provider.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform provider config injection"
     },
     "ansible_vault_password": {
       "regex": "ansible-vault.*decrypt|ansible-vault.*view",
       "risk_level": "critical",
       "description": "Ansible vault password exposure"
     },
     "ansible_playbook_injection": {
       "regex": "ansible-playbook.*-e.*\\$\\{.*\\}|ansible-playbook.*--extra-vars.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ansible playbook injection"
     },
     "helm_chart_injection": {
       "regex": "helm.*install.*--set.*\\$\\{.*\\}|helm.*upgrade.*--set.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Helm chart injection"
     },
     "spring4shell_cve_2022_22965": {
       "regex": "class.*\\$\\{.*\\}|method.*\\$\\{.*\\}|field.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22965"
     },
     "spring4shell_cve_2022_22963": {
       "regex": "spring.*cloud.*function.*\\$\\{.*\\}|function.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22963"
     },
     "spring4shell_cve_2022_22950": {
       "regex": "spring.*cloud.*gateway.*\\$\\{.*\\}|gateway.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring4Shell CVE-2022-22950"
     },
     "log4shell_cve_2021_44228": {
       "regex": "\\$\\{jndi:ldap://|\\$\\{jndi:rmi://|\\$\\{jndi:dns://",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-44228"
     },
     "log4shell_cve_2021_45046": {
       "regex": "\\$\\{jndi:ldap://.*\\$\\{.*\\}|\\$\\{jndi:rmi://.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-45046"
     },
     "log4shell_cve_2021_45105": {
       "regex": "\\$\\{jndi:.*\\$\\{.*\\}.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Log4Shell CVE-2021-45105"
     },
     "proxyshell_cve_2021_34473": {
       "regex": "powershell.*-enc.*[A-Za-z0-9+/]{20,}|powershell.*-encodedcommand.*[A-Za-z0-9+/]{20,}",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-34473"
     },
     "proxyshell_cve_2021_34523": {
       "regex": "exchange.*powershell.*-enc|exchange.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-34523"
     },
     "proxyshell_cve_2021_31207": {
       "regex": "exchange.*autodiscover.*powershell|exchange.*ecp.*powershell",
       "risk_level": "critical",
       "description": "ProxyShell CVE-2021-31207"
     },
     "proxylogon_cve_2021_26855": {
       "regex": "exchange.*autodiscover.*authentication.*bypass|exchange.*ecp.*authentication.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26855"
     },
     "proxylogon_cve_2021_26857": {
       "regex": "exchange.*autodiscover.*deserialization|exchange.*ecp.*deserialization",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26857"
     },
     "proxylogon_cve_2021_26858": {
       "regex": "exchange.*autodiscover.*post.*authentication|exchange.*ecp.*post.*authentication",
       "risk_level": "critical",
       "description": "ProxyLogon CVE-2021-26858"
     },
     "zerologon_cve_2020_1472": {
       "regex": "netlogon.*privilege.*escalation|netlogon.*authentication.*bypass",
       "risk_level": "critical",
       "description": "ZeroLogon CVE-2020-1472"
     },
     "printnightmare_cve_2021_1675": {
       "regex": "spoolsv.*privilege.*escalation|print.*spooler.*exploit",
       "risk_level": "critical",
       "description": "PrintNightmare CVE-2021-1675"
     },
     "printnightmare_cve_2021_34527": {
       "regex": "windows.*print.*spooler.*rce|print.*spooler.*remote.*code.*execution",
       "risk_level": "critical",
       "description": "PrintNightmare CVE-2021-34527"
     },
     "eternalblue_ms17_010": {
       "regex": "smb.*eternalblue|ms17_010.*exploit|smb.*vulnerability.*exploitation",
       "risk_level": "critical",
       "description": "EternalBlue MS17-010"
     },
     "wannacry_ransomware": {
       "regex": "wannacry.*encrypt|wannacry.*ransomware|wannacry.*bitcoin.*address",
       "risk_level": "critical",
       "description": "WannaCry ransomware"
     },
     "notpetya_ransomware": {
       "regex": "notpetya.*encrypt|notpetya.*ransomware|notpetya.*mbr.*overwrite",
       "risk_level": "critical",
       "description": "NotPetya ransomware"
     },
     "ryuk_ransomware": {
       "regex": "ryuk.*encrypt|ryuk.*ransomware|ryuk.*bitcoin.*wallet",
       "risk_level": "critical",
       "description": "Ryuk ransomware"
     },
     "revil_ransomware": {
       "regex": "revil.*encrypt|revil.*ransomware|revil.*double.*extortion",
       "risk_level": "critical",
       "description": "REvil ransomware"
     },
     "heartbleed_cve_2014_0160": {
       "regex": "openssl.*heartbleed|heartbleed.*exploit|openssl.*vulnerability",
       "risk_level": "critical",
       "description": "Heartbleed CVE-2014-0160"
     },
     "shellshock_cve_2014_6271": {
       "regex": "bash.*shellshock|shellshock.*exploit|bash.*vulnerability",
       "risk_level": "critical",
       "description": "Shellshock CVE-2014-6271"
     },
     "struts_cve_2017_5638": {
       "regex": "struts.*cve.*2017.*5638|struts.*ognl.*injection|struts.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2017-5638"
     },
     "struts_cve_2017_9805": {
       "regex": "struts.*cve.*2017.*9805|struts.*rest.*plugin.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2017-9805"
     },
     "struts_cve_2018_11776": {
       "regex": "struts.*cve.*2018.*11776|struts.*namespace.*vulnerability",
       "risk_level": "critical",
       "description": "Struts CVE-2018-11776"
     },
     "spring_expression_injection": {
       "regex": "spel.*\\$\\{.*\\}|spring.*expression.*\\$\\{.*\\}|@spel.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring expression injection"
     },
     "spring_ognl_injection": {
       "regex": "ognl.*\\$\\{.*\\}|@ognl.*\\$\\{.*\\}|spring.*ognl.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Spring OGNL injection"
     },
     "django_template_injection": {
       "regex": "django.*template.*\\$\\{.*\\}|jinja2.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django template injection"
     },
     "django_orm_injection": {
       "regex": "django.*orm.*\\$\\{.*\\}|queryset.*\\$\\{.*\\}|model.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Django ORM injection"
     },
     "laravel_artisan_injection": {
       "regex": "artisan.*\\$\\{.*\\}|php.*artisan.*\\$\\{.*\\}|laravel.*command.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Artisan injection"
     },
     "laravel_eloquent_injection": {
       "regex": "eloquent.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Laravel Eloquent injection"
     },
     "express_route_injection": {
       "regex": "express.*route.*\\$\\{.*\\}|app\\.get.*\\$\\{.*\\}|app\\.post.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js route injection"
     },
     "express_middleware_bypass": {
       "regex": "express.*middleware.*bypass|app\\.use.*\\$\\{.*\\}|middleware.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Express.js middleware bypass"
     },
     "rails_erb_injection": {
       "regex": "erb.*\\$\\{.*\\}|rails.*erb.*\\$\\{.*\\}|template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ERB injection"
     },
     "rails_active_record_injection": {
       "regex": "activerecord.*\\$\\{.*\\}|model.*\\$\\{.*\\}|query.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Ruby on Rails ActiveRecord injection"
     },
     "aspnet_viewstate_manipulation": {
       "regex": "viewstate.*\\$\\{.*\\}|__viewstate.*\\$\\{.*\\}|aspnet.*viewstate.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET ViewState manipulation"
     },
     "aspnet_form_authentication_bypass": {
       "regex": "forms.*authentication.*bypass|aspnet.*auth.*bypass|authentication.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "ASP.NET form authentication bypass"
     },
     "flask_jinja2_injection": {
       "regex": "jinja2.*\\$\\{.*\\}|flask.*template.*\\$\\{.*\\}|render_template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Flask Jinja2 injection"
     },
     "fastapi_dependency_injection": {
       "regex": "fastapi.*dependency.*\\$\\{.*\\}|depends.*\\$\\{.*\\}|dependency.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "FastAPI dependency injection abuse"
     },
     "anti_debugging_detection": {
       "regex": "isdebuggerpresent|checkremotedebuggerpresent|debugger.*detection",
       "risk_level": "medium",
       "description": "Anti-debugging detection"
     },
     "anti_vm_detection": {
       "regex": "virtualbox|vmware|vbox|vm.*detection|sandbox.*detection",
       "risk_level": "medium",
       "description": "Anti-VM detection"
     },
     "code_obfuscation_string_encryption": {
       "regex": "string.*encryption|obfuscate.*string|encrypt.*string",
       "risk_level": "medium",
       "description": "Code obfuscation string encryption"
     },
     "code_obfuscation_variable_renaming": {
       "regex": "variable.*renaming|rename.*variable|obfuscate.*variable",
       "risk_level": "medium",
       "description": "Code obfuscation variable renaming"
     },
     "api_hooking_function_hooking": {
       "regex": "hook.*function|api.*hooking|function.*hook",
       "risk_level": "high",
       "description": "API hooking function hooking"
     },
     "api_hooking_system_call_interception": {
       "regex": "system.*call.*interception|syscall.*hook|intercept.*syscall",
       "risk_level": "high",
       "description": "API hooking system call interception"
     },
     "process_injection_dll_injection": {
       "regex": "dll.*injection|inject.*dll|loadlibrary.*injection",
       "risk_level": "critical",
       "description": "Process injection DLL injection"
     },
     "process_injection_code_cave_injection": {
       "regex": "code.*cave.*injection|cave.*injection|inject.*cave",
       "risk_level": "critical",
       "description": "Process injection code cave injection"
     },
     "memory_scanning_process_memory_manipulation": {
       "regex": "process.*memory.*manipulation|memory.*scanning|manipulate.*memory",
       "risk_level": "high",
       "description": "Memory scanning process memory manipulation"
     },
     "ssh_tunneling_port_forwarding": {
       "regex": "ssh.*-L.*\\d+:.*:\\d+|ssh.*-D.*\\d+|ssh.*tunnel",
       "risk_level": "medium",
       "description": "SSH tunneling port forwarding"
     },
     "ssh_tunneling_reverse_tunneling": {
       "regex": "ssh.*-R.*\\d+:.*:\\d+|reverse.*tunnel|ssh.*reverse",
       "risk_level": "medium",
       "description": "SSH tunneling reverse tunneling"
     },
     "vpn_proxy_abuse_tunnel_manipulation": {
       "regex": "vpn.*tunnel.*manipulation|proxy.*tunnel|tunnel.*manipulation",
       "risk_level": "medium",
       "description": "VPN/proxy abuse tunnel manipulation"
     },
     "port_scanning_network_reconnaissance": {
       "regex": "nmap.*-sS|nmap.*-sU|nmap.*-p.*\\d+",
       "risk_level": "medium",
       "description": "Port scanning network reconnaissance"
     },
     "network_reconnaissance_host_discovery": {
       "regex": "host.*discovery|network.*scanning|reconnaissance.*scan",
       "risk_level": "medium",
       "description": "Network reconnaissance host discovery"
     },
     "session_hijacking_cookie_manipulation": {
       "regex": "cookie.*manipulation|session.*hijacking|hijack.*session",
       "risk_level": "high",
       "description": "Session hijacking cookie manipulation"
     },
     "clickjacking_ui_redressing": {
       "regex": "ui.*redressing|clickjacking|frame.*injection",
       "risk_level": "medium",
       "description": "Clickjacking UI redressing"
     },
     "open_redirects_url_redirection_abuse": {
       "regex": "redirect.*\\$\\{.*\\}|url.*redirection.*\\$\\{.*\\}|redirect.*parameter",
       "risk_level": "medium",
       "description": "Open redirects URL redirection abuse"
     },
     "ssrf_server_side_request_forgery": {
       "regex": "ssrf.*\\$\\{.*\\}|server.*side.*request.*forgery|internal.*service.*access",
       "risk_level": "high",
       "description": "SSRF server-side request forgery"
     },
     "xml_injection_data_format_manipulation": {
       "regex": "xml.*\\$\\{.*\\}|xml.*injection|data.*format.*manipulation",
       "risk_level": "high",
       "description": "XML injection data format manipulation"
     },
     "json_injection_query_injection": {
       "regex": "json.*\\$\\{.*\\}|json.*injection|query.*injection",
       "risk_level": "high",
       "description": "JSON injection query injection"
     },
     "graphql_injection_query_injection": {
       "regex": "graphql.*\\$\\{.*\\}|graphql.*injection|query.*injection",
       "risk_level": "high",
       "description": "GraphQL injection query injection"
     },
     "android_bypass_root_detection_bypass": {
       "regex": "root.*detection.*bypass|android.*root.*bypass|bypass.*root.*detection",
       "risk_level": "medium",
       "description": "Android bypass root detection bypass"
     },
     "ios_bypass_jailbreak_detection_bypass": {
       "regex": "jailbreak.*detection.*bypass|ios.*jailbreak.*bypass|bypass.*jailbreak.*detection",
       "risk_level": "medium",
       "description": "iOS bypass jailbreak detection bypass"
     },
     "react_native_javascript_bridge_abuse": {
       "regex": "react.*native.*bridge.*abuse|javascript.*bridge.*\\$\\{.*\\}|native.*module.*injection",
       "risk_level": "high",
       "description": "React Native JavaScript bridge abuse"
     },
     "flutter_dart_code_injection": {
       "regex": "flutter.*dart.*injection|dart.*code.*\\$\\{.*\\}|platform.*channel.*abuse",
       "risk_level": "high",
       "description": "Flutter Dart code injection"
     },
     "smart_home_device_hijacking": {
       "regex": "smart.*home.*hijacking|device.*hijacking|automation.*abuse",
       "risk_level": "medium",
       "description": "Smart home device hijacking"
     },
     "industrial_iot_scada_manipulation": {
       "regex": "scada.*manipulation|plc.*programming|industrial.*iot.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Industrial IoT SCADA manipulation"
     },
     "medical_device_patient_data_access": {
       "regex": "medical.*device.*data.*access|patient.*data.*\\$\\{.*\\}|device.*control.*bypass",
       "risk_level": "critical",
       "description": "Medical device patient data access"
     },
     "automotive_can_bus_manipulation": {
       "regex": "can.*bus.*manipulation|ecu.*reprogramming|automotive.*security.*bypass",
       "risk_level": "critical",
       "description": "Automotive CAN bus manipulation"
     },
     "wearable_health_data_access": {
       "regex": "wearable.*health.*data.*access|device.*synchronization.*abuse|health.*data.*\\$\\{.*\\}",
       "risk_level": "medium",
       "description": "Wearable health data access"
     },
     "mining_malware_coinhive": {
       "regex": "coinhive.*mining|coinhive.*script|mining.*malware.*coinhive",
       "risk_level": "high",
       "description": "Mining malware Coinhive"
     },
     "mining_malware_xmrig": {
       "regex": "xmrig.*mining|xmrig.*malware|mining.*malware.*xmrig",
       "risk_level": "high",
       "description": "Mining malware XMRig"
     },
     "mining_pool_manipulation": {
       "regex": "mining.*pool.*manipulation|pool.*hijacking|hash.*rate.*theft",
       "risk_level": "high",
       "description": "Mining pool manipulation"
     },
     "wallet_theft_private_key_extraction": {
       "regex": "private.*key.*extraction|wallet.*theft|wallet\\.dat.*access",
       "risk_level": "critical",
       "description": "Wallet theft private key extraction"
     },
     "blockchain_51_attack": {
       "regex": "51.*attack|blockchain.*attack|double.*spending.*attempt",
       "risk_level": "critical",
       "description": "Blockchain 51% attack"
     },
     "defi_flash_loan_attack": {
       "regex": "flash.*loan.*attack|defi.*exploit|smart.*contract.*manipulation",
       "risk_level": "high",
       "description": "DeFi flash loan attack"
     },
     "nft_token_manipulation": {
       "regex": "nft.*token.*manipulation|marketplace.*abuse|token.*manipulation",
       "risk_level": "medium",
       "description": "NFT token manipulation"
     },
     "exchange_trading_bot_manipulation": {
       "regex": "trading.*bot.*manipulation|order.*book.*abuse|exchange.*attack",
       "risk_level": "critical",
       "description": "Exchange trading bot manipulation"
     },
     "docker_container_privilege_escalation": {
       "regex": "docker.*run.*--cap-add.*SYS_ADMIN|docker.*run.*--cap-add.*NET_ADMIN",
       "risk_level": "critical",
       "description": "Docker container privilege escalation"
     },
     "docker_container_resource_abuse": {
       "regex": "docker.*run.*--memory.*0|docker.*run.*--cpus.*0",
       "risk_level": "high",
       "description": "Docker container resource abuse"
     },
     "kubernetes_pod_security_context_bypass": {
       "regex": "runAsUser.*0|runAsGroup.*0|fsGroup.*0",
       "risk_level": "critical",
       "description": "Kubernetes pod security context bypass"
     },
     "kubernetes_pod_privilege_escalation": {
       "regex": "allowPrivilegeEscalation.*true|privileged.*true",
       "risk_level": "critical",
       "description": "Kubernetes pod privilege escalation"
     },
     "aws_cloudformation_template_injection": {
       "regex": "cloudformation.*template.*\\$\\{.*\\}|cfn.*template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "AWS CloudFormation template injection"
     },
     "aws_lambda_function_injection": {
       "regex": "lambda.*function.*\\$\\{.*\\}|aws.*lambda.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "AWS Lambda function injection"
     },
     "azure_arm_template_injection": {
       "regex": "arm.*template.*\\$\\{.*\\}|azure.*template.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Azure ARM template injection"
     },
     "azure_function_app_injection": {
       "regex": "function.*app.*\\$\\{.*\\}|azure.*function.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Azure Function App injection"
     },
     "gcp_cloud_function_injection": {
       "regex": "cloud.*function.*\\$\\{.*\\}|gcp.*function.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "GCP Cloud Function injection"
     },
     "terraform_remote_state_manipulation": {
       "regex": "terraform.*remote.*state.*\\$\\{.*\\}|backend.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Terraform remote state manipulation"
     },
     "ansible_vault_password_file": {
       "regex": "ansible-vault.*--vault-password-file|--vault-password-file.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Ansible vault password file exposure"
     },
     "helm_secret_injection": {
       "regex": "helm.*secret.*\\$\\{.*\\}|--set.*secret.*\\$\\{.*\\}",
       "risk_level": "high",
       "description": "Helm secret injection"
     },
     "spring_cloud_function_injection": {
       "regex": "spring.*cloud.*function.*\\$\\{.*\\}|function.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring Cloud Function injection"
     },
     "spring_cloud_gateway_injection": {
       "regex": "spring.*cloud.*gateway.*\\$\\{.*\\}|gateway.*\\$\\{.*\\}",
       "risk_level": "critical",
       "description": "Spring Cloud Gateway injection"
     },
     "log4j_jndi_injection_variants": {
       "regex": "\\$\\{jndi:ldaps://|\\$\\{jndi:corba://|\\$\\{jndi:iiop://",
       "risk_level": "critical",
       "description": "Log4j JNDI injection variants"
     },
     "log4j_lookup_injection": {
       "regex": "\\$\\{java:runtime|\\$\\{java:vm|\\$\\{java:os",
       "risk_level": "critical",
       "description": "Log4j lookup injection"
     },
     "proxyshell_exchange_autodiscover": {
       "regex": "autodiscover.*powershell.*-enc|autodiscover.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell Exchange Autodiscover"
     },
     "proxyshell_exchange_ecp": {
       "regex": "ecp.*powershell.*-enc|ecp.*powershell.*-encodedcommand",
       "risk_level": "critical",
       "description": "ProxyShell Exchange ECP"
     },
     "proxylogon_exchange_autodiscover_auth": {
       "regex": "autodiscover.*authentication.*bypass|autodiscover.*auth.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon Exchange Autodiscover authentication bypass"
     },
     "proxylogon_exchange_ecp_auth": {
       "regex": "ecp.*authentication.*bypass|ecp.*auth.*bypass",
       "risk_level": "critical",
       "description": "ProxyLogon Exchange ECP authentication bypass"
     },
     "zerologon_netlogon_privilege_escalation": {
       "regex": "netlogon.*privilege.*escalation|netlogon.*auth.*bypass",
       "risk_level": "critical",
       "description": "ZeroLogon Netlogon privilege escalation"
     },
     "printnightmare_spoolsv_exploit": {
       "regex": "spoolsv.*exploit|print.*spooler.*rce|spooler.*vulnerability",
       "risk_level": "critical",
       "description": "PrintNightmare spoolsv exploit"
     },
     "eternalblue_smb_exploit": {
       "regex": "smb.*eternalblue|ms17_010.*smb|smb.*vulnerability",
       "risk_level": "critical",
       "description": "EternalBlue SMB exploit"
     },
     "wannacry_encryption": {
       "regex": "wannacry.*encrypt|wannacry.*encryption|wannacry.*ransomware",
       "risk_level": "critical",
       "description": "WannaCry encryption"
     },
     "notpetya_mbr_overwrite": {
       "regex": "notpetya.*mbr.*overwrite|notpetya.*boot.*sector|notpetya.*encryption",
       "risk_level": "critical",
       "description": "NotPetya MBR overwrite"
     },
     "ryuk_encryption": {
       "regex": "ryuk.*encrypt|ryuk.*encryption|ryuk.*bitcoin.*wallet",
       "risk_level": "critical",
       "description": "Ryuk encryption"
     },
     "revil_double_extortion": {
       "regex": "revil.*double.*extortion|revil.*encrypt|revil.*ransomware",
       "risk_level": "critical",
       "description": "REvil double extortion"
     },
     "heartbleed_openssl_vulnerability": {
       "regex": "openssl.*heartbleed|heartbleed.*openssl|openssl.*vulnerability",
       "risk_level": "critical",
       "description": "Heartbleed OpenSSL vulnerability"
     },
     "shellshock_bash_vulnerability": {
       "regex": "bash.*shellshock|shellshock.*bash|bash.*vulnerability",
       "risk_level": "critical",
       "description": "Shellshock Bash vulnerability"
     },
     "struts_ognl_injection": {
       "regex": "struts.*ognl.*injection|ognl.*struts|struts.*vulnerability",
       "risk_level": "critical",
       "description": "Struts OGNL injection"
     },
     "struts_rest_plugin_vulnerability": {
       "regex": "struts.*rest.*plugin.*vulnerability|rest.*plugin.*struts",
       "risk_level": "critical",
       "description": "Struts REST plugin vulnerability"
     },
     "struts_namespace_vulnerability": {
       "regex": "struts.*namespace.*vulnerability|namespace.*struts",
       "risk_level": "critical",
       "description": "Struts namespace vulnerability"
     },
     "spring_spel_injection": {
       "risk_level": "high",
       "description": "Spring SpEL injection"
     },
     "cicd_pipeline_abuse_jenkins_script_injection": {
       "regex": "jenkins.*script.*\$\{.*\}|pipeline.*script.*\$\{.*\}|jenkins.*groovy.*\$\{.*\}",
       "risk_level": "critical",
       "description": "Jenkins pipeline script injection"
     },
     "cicd_pipeline_abuse_github_actions_injection": {
       "regex": "github.*actions.*\$\{.*\}|workflow.*\$\{.*\}|action.*\$\{.*\}",
       "risk_level": "critical",
       "description": "GitHub Actions workflow injection"
     },
     "cicd_pipeline_abuse_azure_devops_injection": {
       "regex": "azure.*devops.*\$\{.*\}|azure.*pipeline.*\$\{.*\}|yaml.*\$\{.*\}",
       "risk_level": "critical",
       "description": "Azure DevOps pipeline injection"
     },
     "cicd_pipeline_abuse_environment_variable_injection": {
       "regex": "env.*\$\{.*\}|environment.*\$\{.*\}|envvar.*\$\{.*\}",
       "risk_level": "high",
       "description": "Environment variable injection"
     },
     "cicd_pipeline_abuse_build_script_injection": {
       "regex": "build.*script.*\$\{.*\}|script.*\$\{.*\}|build.*\$\{.*\}",
       "risk_level": "critical",
       "description": "Build script injection"
     }
   }
 }
